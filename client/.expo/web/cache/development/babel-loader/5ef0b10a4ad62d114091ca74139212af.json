{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  suggestionSettings: {\n    suggestionsList: ['Meetings', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself', 'Gratitude', 'Step 10s', 'Inventory', 'Called a Newcomer', 'Apologised'],\n    fullSuggestionsList: ['Meetings', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself', 'Gratitude', 'Step 10s', 'Inventory', 'Called a Newcomer', 'Apologised']\n  },\n  userSettings: {\n    spare: []\n  }\n};\n\nvar settingsReducer = function settingsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADDTO_SUGGESTIONS_LIST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suggestionSettings: _objectSpread(_objectSpread({}, state.suggestionSettings), {}, {\n          suggestionsList: [].concat(_toConsumableArray(state.suggestionSettings.suggestionsList), [action.payload])\n        })\n      });\n\n    case \"REMOVEFROM_SUGGESTIONS_LIST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suggestionSettings: _objectSpread(_objectSpread({}, state.suggestionSettings), {}, {\n          suggestionsList: state.suggestionSettings.suggestionsList.filter(function (elInList) {\n            return elInList !== action.payload;\n          })\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default settingsReducer;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/redux/settingsReducer.js"],"names":["initialState","suggestionSettings","suggestionsList","fullSuggestionsList","userSettings","spare","settingsReducer","state","action","type","payload","filter","elInList"],"mappings":";;;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,eAAe,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,YAAvB,EAAqC,QAArC,EAA+C,gBAA/C,EAAiE,WAAjE,EAA8E,UAA9E,EAA0F,WAA1F,EAAuG,mBAAvG,EAA4H,YAA5H,CADC;AAElBC,IAAAA,mBAAmB,EAAE,CAAC,UAAD,EAAa,QAAb,EAAuB,YAAvB,EAAqC,QAArC,EAA+C,gBAA/C,EAAiE,WAAjE,EAA8E,UAA9E,EAA0F,WAA1F,EAAuG,mBAAvG,EAA4H,YAA5H;AAFH,GADD;AAKnBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK;AALK,CAArB;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,6CACKF,KADL;AAEEN,QAAAA,kBAAkB,kCACbM,KAAK,CAACN,kBADO;AAEhBC,UAAAA,eAAe,+BAAMK,KAAK,CAACN,kBAAN,CAAyBC,eAA/B,IAAgDM,MAAM,CAACE,OAAvD;AAFC;AAFpB;;AAOF,SAAK,6BAAL;AACE,6CACKH,KADL;AAEEN,QAAAA,kBAAkB,kCACbM,KAAK,CAACN,kBADO;AAEhBC,UAAAA,eAAe,EAAEK,KAAK,CAACN,kBAAN,CAAyBC,eAAzB,CAAyCS,MAAzC,CAAgD,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,KAAKJ,MAAM,CAACE,OAAxB;AAAA,WAAxD;AAFD;AAFpB;;AAOF;AACE,aAAOH,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,eAAf","sourcesContent":["const initialState = {\n  suggestionSettings: {\n    suggestionsList: ['Meetings', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself', 'Gratitude', 'Step 10s', 'Inventory', 'Called a Newcomer', 'Apologised'],\n    fullSuggestionsList: ['Meetings', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself', 'Gratitude', 'Step 10s', 'Inventory', 'Called a Newcomer', 'Apologised'],\n  },\n  userSettings: {\n    spare: [],\n  }\n};\n\nconst settingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADDTO_SUGGESTIONS_LIST\":\n      return {\n        ...state,\n        suggestionSettings: {\n          ...state.suggestionSettings,\n          suggestionsList: [...state.suggestionSettings.suggestionsList, action.payload]\n        }\n      }\n    case \"REMOVEFROM_SUGGESTIONS_LIST\":\n      return {\n        ...state,\n        suggestionSettings: {\n          ...state.suggestionSettings,\n          suggestionsList: state.suggestionSettings.suggestionsList.filter(elInList => elInList !== action.payload)\n        }\n      }  \n    default:\n      return state;\n   }\n}\n\nexport default settingsReducer;"]},"metadata":{},"sourceType":"module"}