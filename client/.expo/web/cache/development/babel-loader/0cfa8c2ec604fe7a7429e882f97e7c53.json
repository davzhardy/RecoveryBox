{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { xdateToData } from \"../../interface\";\nimport XDate from 'xdate';\nimport dateutils from \"../../dateutils\";\nimport styleConstructor from \"./style\";\nimport { RESERVATION_DATE } from \"../../testIDs\";\n\nvar Reservation = function (_Component) {\n  _inherits(Reservation, _Component);\n\n  var _super = _createSuper(Reservation);\n\n  function Reservation(props) {\n    var _this;\n\n    _classCallCheck(this, Reservation);\n\n    _this = _super.call(this, props);\n    _this.styles = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(Reservation, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var r1 = this.props.item;\n      var r2 = nextProps.item;\n      var changed = true;\n\n      if (!r1 && !r2) {\n        changed = false;\n      } else if (r1 && r2) {\n        if (r1.day.getTime() !== r2.day.getTime()) {\n          changed = true;\n        } else if (!r1.reservation && !r2.reservation) {\n          changed = false;\n        } else if (r1.reservation && r2.reservation) {\n          if (!r1.date && !r2.date || r1.date && r2.date) {\n            if (_.isFunction(this.props.rowHasChanged)) {\n              changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\n            }\n          }\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"renderDate\",\n    value: function renderDate(date, item) {\n      if (_.isFunction(this.props.renderDay)) {\n        return this.props.renderDay(date ? xdateToData(date) : undefined, item);\n      }\n\n      var today = dateutils.sameDate(date, XDate()) ? this.styles.today : undefined;\n\n      if (date) {\n        return React.createElement(View, {\n          style: this.styles.day,\n          testID: RESERVATION_DATE,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          allowFontScaling: false,\n          style: [this.styles.dayNum, today],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        }, date.getDate()), React.createElement(Text, {\n          allowFontScaling: false,\n          style: [this.styles.dayText, today],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }, XDate.locales[XDate.defaultLocale].dayNamesShort[date.getDay()]));\n      } else {\n        return React.createElement(View, {\n          style: this.styles.day,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$item = this.props.item,\n          reservation = _this$props$item.reservation,\n          date = _this$props$item.date;\n      var content;\n\n      if (reservation) {\n        var firstItem = date ? true : false;\n\n        if (_.isFunction(this.props.renderItem)) {\n          content = this.props.renderItem(reservation, firstItem);\n        }\n      } else if (_.isFunction(this.props.renderEmptyDate)) {\n        content = this.props.renderEmptyDate(date);\n      }\n\n      return React.createElement(View, {\n        style: this.styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }, this.renderDate(date, reservation), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, content));\n    }\n  }]);\n\n  return Reservation;\n}(Component);\n\nReservation.displayName = 'IGNORE';\nexport default Reservation;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js"],"names":["_","React","Component","xdateToData","XDate","dateutils","styleConstructor","RESERVATION_DATE","Reservation","props","styles","theme","nextProps","r1","item","r2","changed","day","getTime","reservation","date","isFunction","rowHasChanged","renderDay","undefined","today","sameDate","dayNum","getDate","dayText","locales","defaultLocale","dayNamesShort","getDay","content","firstItem","renderItem","renderEmptyDate","container","renderDate","flex","displayName"],"mappings":";;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAGA,SAAQC,WAAR;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;AACA,OAAOC,gBAAP;AACA,SAAQC,gBAAR;;IAGMC,W;;;;;AAGJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,MAAL,GAAcJ,gBAAgB,CAACG,KAAK,CAACE,KAAP,CAA9B;AAHiB;AAIlB;;;;0CAEqBC,S,EAAW;AAC/B,UAAMC,EAAE,GAAG,KAAKJ,KAAL,CAAWK,IAAtB;AACA,UAAMC,EAAE,GAAGH,SAAS,CAACE,IAArB;AACA,UAAIE,OAAO,GAAG,IAAd;;AACA,UAAI,CAACH,EAAD,IAAO,CAACE,EAAZ,EAAgB;AACdC,QAAAA,OAAO,GAAG,KAAV;AACD,OAFD,MAEO,IAAIH,EAAE,IAAIE,EAAV,EAAc;AACnB,YAAIF,EAAE,CAACI,GAAH,CAAOC,OAAP,OAAqBH,EAAE,CAACE,GAAH,CAAOC,OAAP,EAAzB,EAA2C;AACzCF,UAAAA,OAAO,GAAG,IAAV;AACD,SAFD,MAEO,IAAI,CAACH,EAAE,CAACM,WAAJ,IAAmB,CAACJ,EAAE,CAACI,WAA3B,EAAwC;AAC7CH,UAAAA,OAAO,GAAG,KAAV;AACD,SAFM,MAEA,IAAIH,EAAE,CAACM,WAAH,IAAkBJ,EAAE,CAACI,WAAzB,EAAsC;AAC3C,cAAK,CAACN,EAAE,CAACO,IAAJ,IAAY,CAACL,EAAE,CAACK,IAAjB,IAA2BP,EAAE,CAACO,IAAH,IAAWL,EAAE,CAACK,IAA7C,EAAoD;AAClD,gBAAIpB,CAAC,CAACqB,UAAF,CAAa,KAAKZ,KAAL,CAAWa,aAAxB,CAAJ,EAA4C;AAC1CN,cAAAA,OAAO,GAAG,KAAKP,KAAL,CAAWa,aAAX,CAAyBT,EAAE,CAACM,WAA5B,EAAyCJ,EAAE,CAACI,WAA5C,CAAV;AACD;AACF;AACF;AACF;;AACD,aAAOH,OAAP;AACD;;;+BAEUI,I,EAAMN,I,EAAM;AACrB,UAAId,CAAC,CAACqB,UAAF,CAAa,KAAKZ,KAAL,CAAWc,SAAxB,CAAJ,EAAwC;AACtC,eAAO,KAAKd,KAAL,CAAWc,SAAX,CAAqBH,IAAI,GAAGjB,WAAW,CAACiB,IAAD,CAAd,GAAuBI,SAAhD,EAA2DV,IAA3D,CAAP;AACD;;AACD,UAAMW,KAAK,GAAGpB,SAAS,CAACqB,QAAV,CAAmBN,IAAnB,EAAyBhB,KAAK,EAA9B,IAAoC,KAAKM,MAAL,CAAYe,KAAhD,GAAwDD,SAAtE;;AACA,UAAIJ,IAAJ,EAAU;AACR,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,KAAKV,MAAL,CAAYO,GAAzB;AAA8B,UAAA,MAAM,EAAEV,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,gBAAgB,EAAE,KAAxB;AAA+B,UAAA,KAAK,EAAE,CAAC,KAAKG,MAAL,CAAYiB,MAAb,EAAqBF,KAArB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoEL,IAAI,CAACQ,OAAL,EAApE,CADF,EAEE,oBAAC,IAAD;AAAM,UAAA,gBAAgB,EAAE,KAAxB;AAA+B,UAAA,KAAK,EAAE,CAAC,KAAKlB,MAAL,CAAYmB,OAAb,EAAsBJ,KAAtB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqErB,KAAK,CAAC0B,OAAN,CAAc1B,KAAK,CAAC2B,aAApB,EAAmCC,aAAnC,CAAiDZ,IAAI,CAACa,MAAL,EAAjD,CAArE,CAFF,CADF;AAMD,OAPD,MAOO;AACL,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,KAAKvB,MAAL,CAAYO,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;6BAEQ;AAAA,6BACqB,KAAKR,KAAL,CAAWK,IADhC;AAAA,UACAK,WADA,oBACAA,WADA;AAAA,UACaC,IADb,oBACaA,IADb;AAEP,UAAIc,OAAJ;;AACA,UAAIf,WAAJ,EAAiB;AACf,YAAMgB,SAAS,GAAGf,IAAI,GAAG,IAAH,GAAU,KAAhC;;AACA,YAAIpB,CAAC,CAACqB,UAAF,CAAa,KAAKZ,KAAL,CAAW2B,UAAxB,CAAJ,EAAyC;AACvCF,UAAAA,OAAO,GAAG,KAAKzB,KAAL,CAAW2B,UAAX,CAAsBjB,WAAtB,EAAmCgB,SAAnC,CAAV;AACD;AACF,OALD,MAKO,IAAInC,CAAC,CAACqB,UAAF,CAAa,KAAKZ,KAAL,CAAW4B,eAAxB,CAAJ,EAA8C;AACnDH,QAAAA,OAAO,GAAG,KAAKzB,KAAL,CAAW4B,eAAX,CAA2BjB,IAA3B,CAAV;AACD;;AACD,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKV,MAAL,CAAY4B,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,CAAgBnB,IAAhB,EAAsBD,WAAtB,CADH,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACqB,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,OADH,CAFF,CADF;AAQD;;;;EArEuBhC,S;;AAApBM,W,CACGiC,W,GAAc,Q;AAuEvB,eAAejC,WAAf","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {View, Text} from 'react-native';\n\nimport {xdateToData} from '../../interface';\nimport XDate from 'xdate';\nimport dateutils from '../../dateutils';\nimport styleConstructor from './style';\nimport {RESERVATION_DATE} from '../../testIDs';\n\n\nclass Reservation extends Component {\n  static displayName = 'IGNORE';\n\n  constructor(props) {\n    super(props);\n\n    this.styles = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const r1 = this.props.item;\n    const r2 = nextProps.item;\n    let changed = true;\n    if (!r1 && !r2) {\n      changed = false;\n    } else if (r1 && r2) {\n      if (r1.day.getTime() !== r2.day.getTime()) {\n        changed = true;\n      } else if (!r1.reservation && !r2.reservation) {\n        changed = false;\n      } else if (r1.reservation && r2.reservation) {\n        if ((!r1.date && !r2.date) || (r1.date && r2.date)) {\n          if (_.isFunction(this.props.rowHasChanged)) {\n            changed = this.props.rowHasChanged(r1.reservation, r2.reservation);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n  renderDate(date, item) {\n    if (_.isFunction(this.props.renderDay)) {\n      return this.props.renderDay(date ? xdateToData(date) : undefined, item);\n    }\n    const today = dateutils.sameDate(date, XDate()) ? this.styles.today : undefined;\n    if (date) {\n      return (\n        <View style={this.styles.day} testID={RESERVATION_DATE}>\n          <Text allowFontScaling={false} style={[this.styles.dayNum, today]}>{date.getDate()}</Text>\n          <Text allowFontScaling={false} style={[this.styles.dayText, today]}>{XDate.locales[XDate.defaultLocale].dayNamesShort[date.getDay()]}</Text>\n        </View>\n      );\n    } else {\n      return (\n        <View style={this.styles.day}/>\n      );\n    }\n  }\n\n  render() {\n    const {reservation, date} = this.props.item;\n    let content;\n    if (reservation) {\n      const firstItem = date ? true : false;\n      if (_.isFunction(this.props.renderItem)) {\n        content = this.props.renderItem(reservation, firstItem);\n      }\n    } else if (_.isFunction(this.props.renderEmptyDate)) {\n      content = this.props.renderEmptyDate(date);\n    }\n    return (\n      <View style={this.styles.container}>\n        {this.renderDate(date, reservation)}\n        <View style={{flex: 1}}>\n          {content}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default Reservation;\n"]},"metadata":{},"sourceType":"module"}