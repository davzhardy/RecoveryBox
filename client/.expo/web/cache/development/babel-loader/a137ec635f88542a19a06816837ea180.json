{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/expandableCalendar/week.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport { SELECT_DATE_SLOT } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport Day from \"../calendar/day/basic\";\nimport UnitDay from \"../calendar/day/period\";\nimport MultiDotDay from \"../calendar/day/multi-dot\";\nimport MultiPeriodDay from \"../calendar/day/multi-period\";\nimport SingleDay from \"../calendar/day/custom\";\nimport Calendar from \"../calendar\";\nvar EmptyArray = [];\n\nvar Week = function (_Component) {\n  _inherits(Week, _Component);\n\n  var _super = _createSuper(Week);\n\n  function Week(props) {\n    var _this;\n\n    _classCallCheck(this, Week);\n\n    _this = _super.call(this, props);\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(Week, [{\n    key: \"getWeek\",\n    value: function getWeek(date) {\n      if (date) {\n        var current = parseDate(date);\n        var daysArray = [current];\n        var dayOfTheWeek = current.getDay() - this.props.firstDay;\n\n        if (dayOfTheWeek < 0) {\n          dayOfTheWeek = 7 + dayOfTheWeek;\n        }\n\n        var newDate = current;\n        var index = dayOfTheWeek - 1;\n\n        while (index >= 0) {\n          newDate = parseDate(newDate).addDays(-1);\n          daysArray.unshift(newDate);\n          index -= 1;\n        }\n\n        newDate = current;\n        index = dayOfTheWeek + 1;\n\n        while (index < 7) {\n          newDate = parseDate(newDate).addDays(1);\n          daysArray.push(newDate);\n          index += 1;\n        }\n\n        return daysArray;\n      }\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      var dayComponent = this.props.dayComponent;\n\n      if (dayComponent) {\n        return dayComponent;\n      }\n\n      switch (this.props.markingType) {\n        case 'period':\n          return UnitDay;\n\n        case 'multi-dot':\n          return MultiDotDay;\n\n        case 'multi-period':\n          return MultiPeriodDay;\n\n        case 'custom':\n          return SingleDay;\n\n        default:\n          return Day;\n      }\n    }\n  }, {\n    key: \"getDateMarking\",\n    value: function getDateMarking(day) {\n      var markedDates = this.props.markedDates;\n\n      if (!markedDates) {\n        return false;\n      }\n\n      var dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n      if (dates.length || dates) {\n        return dates;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var _this$props = this.props,\n          current = _this$props.current,\n          disableAllTouchEventsForDisabledDays = _this$props.disableAllTouchEventsForDisabledDays;\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n      var state = '';\n\n      if (this.props.disabledByDefault) {\n        state = 'disabled';\n      } else if (minDate && !dateutils.isGTE(day, minDate) || maxDate && !dateutils.isLTE(day, maxDate)) {\n        state = 'disabled';\n      } else if (!dateutils.sameMonth(day, parseDate(current))) {\n        state = 'disabled';\n      } else if (dateutils.sameDate(day, XDate())) {\n        state = 'today';\n      }\n\n      if (current && this.props.hideExtraDays) {\n        if (!dateutils.sameMonth(day, parseDate(current))) {\n          return React.createElement(View, {\n            key: id,\n            style: {\n              flex: 1\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }\n          });\n        }\n      }\n\n      var DayComp = this.getDayComponent();\n      var dayDate = day.getDate();\n      var dateAsObject = xdateToData(day);\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }, React.createElement(DayComp, {\n        testID: SELECT_DATE_SLOT + \"-\" + dateAsObject.dateString,\n        state: state,\n        theme: this.props.theme,\n        onPress: this.props.onDayPress,\n        onLongPress: this.props.onDayPress,\n        date: dateAsObject,\n        marking: this.getDateMarking(day),\n        disableAllTouchEventsForDisabledDays: disableAllTouchEventsForDisabledDays,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, dayDate));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var current = this.props.current;\n      var dates = this.getWeek(current);\n      var week = [];\n\n      if (dates) {\n        dates.forEach(function (day, id) {\n          week.push(_this2.renderDay(day, id));\n        }, this);\n      }\n\n      return React.createElement(View, {\n        style: this.style.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [this.style.week, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, week));\n    }\n  }]);\n\n  return Week;\n}(Component);\n\nWeek.displayName = 'IGNORE';\nWeek.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  current: PropTypes.any\n});\nexport default Week;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/expandableCalendar/week.js"],"names":["React","Component","PropTypes","XDate","dateutils","xdateToData","parseDate","SELECT_DATE_SLOT","styleConstructor","Day","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","Calendar","EmptyArray","Week","props","style","theme","date","current","daysArray","dayOfTheWeek","getDay","firstDay","newDate","index","addDays","unshift","push","dayComponent","markingType","day","markedDates","dates","toString","length","id","disableAllTouchEventsForDisabledDays","minDate","maxDate","state","disabledByDefault","isGTE","isLTE","sameMonth","sameDate","hideExtraDays","flex","DayComp","getDayComponent","dayDate","getDate","dateAsObject","alignItems","dateString","onDayPress","getDateMarking","getWeek","week","forEach","renderDay","container","displayName","propTypes","any"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate} from '../interface';\nimport {SELECT_DATE_SLOT} from '../testIDs';\nimport styleConstructor from './style';\n\nimport Day from '../calendar/day/basic';\nimport UnitDay from '../calendar/day/period';\nimport MultiDotDay from '../calendar/day/multi-dot';\nimport MultiPeriodDay from '../calendar/day/multi-period';\nimport SingleDay from '../calendar/day/custom';\nimport Calendar from '../calendar';\n\n\nconst EmptyArray = [];\n\nclass Week extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    ...Calendar.propTypes,\n    // the current date\n    current: PropTypes.any\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n  }\n\n  getWeek(date) {\n    if (date) {\n      const current = parseDate(date);\n      const daysArray = [current];\n      let dayOfTheWeek = current.getDay() - this.props.firstDay;\n      if (dayOfTheWeek < 0) { // to handle firstDay > 0\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      let newDate = current;\n      let index = dayOfTheWeek - 1;\n      while (index >= 0) {\n        newDate = parseDate(newDate).addDays(-1);\n        daysArray.unshift(newDate);\n        index -= 1;\n      }\n\n      newDate = current;\n      index = dayOfTheWeek + 1;\n      while (index < 7) {\n        newDate = parseDate(newDate).addDays(1);\n        daysArray.push(newDate);\n        index += 1;\n      }\n      return daysArray;\n    }\n  }\n\n  getDayComponent() {\n    const {dayComponent} = this.props;\n    if (dayComponent) {\n      return dayComponent;\n    }\n\n    switch (this.props.markingType) {\n    case 'period':\n      return UnitDay;\n    case 'multi-dot':\n      return MultiDotDay;\n    case 'multi-period':\n      return MultiPeriodDay;\n    case 'custom':\n      return SingleDay;\n    default:\n      return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    const {markedDates} = this.props;\n    if (!markedDates) {\n      return false;\n    }\n\n    const dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  // renderWeekNumber (weekNumber) {\n  //   return <Day key={`week-${weekNumber}`} theme={this.props.theme} marking={{disableTouchEvent: true}} state='disabled'>{weekNumber}</Day>;\n  // }\n\n  renderDay(day, id) {\n    const {current, disableAllTouchEventsForDisabledDays} = this.props;\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n\n    let state = '';\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if ((minDate && !dateutils.isGTE(day, minDate)) || (maxDate && !dateutils.isLTE(day, maxDate))) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, parseDate(current))) { // for extra days\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    // hide extra days\n    if (current && this.props.hideExtraDays) {\n      if (!dateutils.sameMonth(day, parseDate(current))) {\n        return (<View key={id} style={{flex: 1}}/>);\n      }\n    }\n\n    const DayComp = this.getDayComponent();\n    const dayDate = day.getDate();\n    const dateAsObject = xdateToData(day);\n\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\n        <DayComp\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\n          state={state}\n          theme={this.props.theme}\n          onPress={this.props.onDayPress}\n          onLongPress={this.props.onDayPress}\n          date={dateAsObject}\n          marking={this.getDateMarking(day)}\n          disableAllTouchEventsForDisabledDays={disableAllTouchEventsForDisabledDays}\n        >\n          {dayDate}\n        </DayComp>\n      </View>\n    );\n  }\n\n  render() {\n    const {current} = this.props;\n    const dates = this.getWeek(current);\n    const week = [];\n\n    if (dates) {\n      dates.forEach((day, id) => {\n        week.push(this.renderDay(day, id));\n      }, this);\n    }\n\n    // if (this.props.showWeekNumbers) {\n    //   week.unshift(this.renderWeekNumber(item[item.length - 1].getWeek()));\n    // }\n\n    return (\n      <View style={this.style.container}>\n        <View style={[this.style.week, this.props.style]}>{week}</View>\n      </View>\n    );\n  }\n}\n\nexport default Week;\n"]},"metadata":{},"sourceType":"module"}