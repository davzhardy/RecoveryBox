{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport moment from 'moment';\nimport styleConstructor from \"./style\";\nimport asCalendarConsumer from \"./asCalendarConsumer\";\n\nvar commons = require(\"./commons\");\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\nvar AgendaList = function (_Component) {\n  _inherits(AgendaList, _Component);\n\n  var _super = _createSuper(AgendaList);\n\n  function AgendaList(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaList);\n\n    _this = _super.call(this, props);\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      if (viewableItems && !_this.sectionScroll) {\n        var topSection = _.get(viewableItems[0], 'section.title');\n\n        if (topSection && topSection !== _this._topSection) {\n          _this._topSection = topSection;\n\n          if (_this.didScroll) {\n            _.invoke(_this.props.context, 'setDate', _this._topSection, UPDATE_SOURCES.LIST_DRAG);\n          }\n        }\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.didScroll) {\n        _this.didScroll = true;\n      }\n\n      _.invoke(_this.props, 'onScroll', event);\n    };\n\n    _this.onMomentumScrollBegin = function (event) {\n      _.invoke(_this.props.context, 'setDisabled', true);\n\n      _.invoke(_this.props, 'onMomentumScrollBegin', event);\n    };\n\n    _this.onMomentumScrollEnd = function (event) {\n      _this.sectionScroll = false;\n\n      _.invoke(_this.props.context, 'setDisabled', false);\n\n      _.invoke(_this.props, 'onMomentumScrollEnd', event);\n    };\n\n    _this.onHeaderLayout = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      _this.sectionHeight = nativeEvent.layout.height;\n    };\n\n    _this.renderSectionHeader = function (_ref3) {\n      var title = _ref3.section.title;\n      var sectionTitle = title;\n\n      if (_this.props.dayFormat) {\n        var date;\n        var today;\n\n        if (_this.props.useMoment) {\n          date = moment(title).format(_this.props.dayFormat);\n          today = moment().format(_this.props.dayFormat);\n        } else {\n          date = XDate(title).toString(_this.props.dayFormat);\n          today = XDate().toString(_this.props.dayFormat);\n        }\n\n        var todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n        sectionTitle = date === today ? todayString + \", \" + date : date;\n      }\n\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: [_this.style.sectionText, _this.props.sectionStyle],\n        onLayout: _this.onHeaderLayout,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, sectionTitle);\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return _.isFunction(_this.props.keyExtractor) ? _this.props.keyExtractor(item, index) : String(index);\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this._topSection = _.get(props, 'sections[0].title');\n    _this.didScroll = false;\n    _this.sectionScroll = false;\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    _this.list = React.createRef();\n    return _this;\n  }\n\n  _createClass(AgendaList, [{\n    key: \"getSectionIndex\",\n    value: function getSectionIndex(date) {\n      var i;\n\n      _.map(this.props.sections, function (section, index) {\n        if (section.title === date) {\n          i = index;\n          return;\n        }\n      });\n\n      return i;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var date = this.props.context.date;\n\n      if (date !== this._topSection) {\n        setTimeout(function () {\n          var sectionIndex = _this2.getSectionIndex(date);\n\n          _this2.scrollToSection(sectionIndex);\n        }, 500);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$context = this.props.context,\n          updateSource = _this$props$context.updateSource,\n          date = _this$props$context.date;\n\n      if (date !== prevProps.context.date) {\n        if (updateSource !== UPDATE_SOURCES.LIST_DRAG && updateSource !== UPDATE_SOURCES.CALENDAR_INIT) {\n          var sectionIndex = this.getSectionIndex(date);\n          this.scrollToSection(sectionIndex);\n        }\n      }\n    }\n  }, {\n    key: \"scrollToSection\",\n    value: function scrollToSection(sectionIndex) {\n      if (this.list.current && sectionIndex !== undefined) {\n        this.sectionScroll = true;\n        this._topSection = this.props.sections[sectionIndex].title;\n        this.list.current.scrollToLocation({\n          animated: true,\n          sectionIndex: sectionIndex,\n          itemIndex: 0,\n          viewPosition: 0,\n          viewOffset: commons.isAndroid ? this.sectionHeight : 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SectionList, _extends({}, this.props, {\n        ref: this.list,\n        keyExtractor: this.keyExtractor,\n        showsVerticalScrollIndicator: false,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        renderSectionHeader: this.renderSectionHeader,\n        onScroll: this.onScroll,\n        onMomentumScrollBegin: this.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        onScrollToIndexFailed: function onScrollToIndexFailed(info) {\n          console.warn('onScrollToIndexFailed info: ', info);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return AgendaList;\n}(Component);\n\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = _objectSpread(_objectSpread({}, SectionList.propTypes), {}, {\n  dayFormat: PropTypes.string,\n  useMoment: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n});\nAgendaList.defaultProps = {\n  dayFormat: 'dddd, MMM d',\n  stickySectionHeadersEnabled: true\n};\nexport default asCalendarConsumer(AgendaList);","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"names":["_","React","Component","PropTypes","XDate","moment","styleConstructor","asCalendarConsumer","commons","require","UPDATE_SOURCES","AgendaList","props","onViewableItemsChanged","viewableItems","sectionScroll","topSection","get","_topSection","didScroll","invoke","context","LIST_DRAG","onScroll","event","onMomentumScrollBegin","onMomentumScrollEnd","onHeaderLayout","nativeEvent","sectionHeight","layout","height","renderSectionHeader","title","section","sectionTitle","dayFormat","date","today","useMoment","format","toString","todayString","locales","defaultLocale","style","sectionText","sectionStyle","keyExtractor","item","index","isFunction","String","theme","viewabilityConfig","itemVisiblePercentThreshold","list","createRef","i","map","sections","setTimeout","sectionIndex","getSectionIndex","scrollToSection","prevProps","updateSource","CALENDAR_INIT","current","undefined","scrollToLocation","animated","itemIndex","viewPosition","viewOffset","isAndroid","info","console","warn","displayName","propTypes","SectionList","string","bool","oneOfType","object","number","array","defaultProps","stickySectionHeadersEnabled"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP;AACA,OAAOC,kBAAP;;AAGA,IAAMC,OAAO,GAAGC,OAAO,aAAvB;;AACA,IAAMC,cAAc,GAAGF,OAAO,CAACE,cAA/B;;IAQMC,U;;;;;AAmBJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA8DnBC,sBA9DmB,GA8DM,gBAAqB;AAAA,UAAnBC,aAAmB,QAAnBA,aAAmB;;AAC5C,UAAIA,aAAa,IAAI,CAAC,MAAKC,aAA3B,EAA0C;AACxC,YAAMC,UAAU,GAAGhB,CAAC,CAACiB,GAAF,CAAMH,aAAa,CAAC,CAAD,CAAnB,EAAwB,eAAxB,CAAnB;;AACA,YAAIE,UAAU,IAAIA,UAAU,KAAK,MAAKE,WAAtC,EAAmD;AACjD,gBAAKA,WAAL,GAAmBF,UAAnB;;AACA,cAAI,MAAKG,SAAT,EAAoB;AAClBnB,YAAAA,CAAC,CAACoB,MAAF,CAAS,MAAKR,KAAL,CAAWS,OAApB,EAA6B,SAA7B,EAAwC,MAAKH,WAA7C,EAA0DR,cAAc,CAACY,SAAzE;AACD;AACF;AACF;AACF,KAxEkB;;AAAA,UA0EnBC,QA1EmB,GA0ER,UAACC,KAAD,EAAW;AACpB,UAAI,CAAC,MAAKL,SAAV,EAAqB;AACnB,cAAKA,SAAL,GAAiB,IAAjB;AACD;;AACDnB,MAAAA,CAAC,CAACoB,MAAF,CAAS,MAAKR,KAAd,EAAqB,UAArB,EAAiCY,KAAjC;AACD,KA/EkB;;AAAA,UAiFnBC,qBAjFmB,GAiFK,UAACD,KAAD,EAAW;AACjCxB,MAAAA,CAAC,CAACoB,MAAF,CAAS,MAAKR,KAAL,CAAWS,OAApB,EAA6B,aAA7B,EAA4C,IAA5C;;AACArB,MAAAA,CAAC,CAACoB,MAAF,CAAS,MAAKR,KAAd,EAAqB,uBAArB,EAA8CY,KAA9C;AACD,KApFkB;;AAAA,UAsFnBE,mBAtFmB,GAsFG,UAACF,KAAD,EAAW;AAE/B,YAAKT,aAAL,GAAqB,KAArB;;AACAf,MAAAA,CAAC,CAACoB,MAAF,CAAS,MAAKR,KAAL,CAAWS,OAApB,EAA6B,aAA7B,EAA4C,KAA5C;;AACArB,MAAAA,CAAC,CAACoB,MAAF,CAAS,MAAKR,KAAd,EAAqB,qBAArB,EAA4CY,KAA5C;AACD,KA3FkB;;AAAA,UA6FnBG,cA7FmB,GA6FF,iBAAmB;AAAA,UAAjBC,WAAiB,SAAjBA,WAAiB;AAClC,YAAKC,aAAL,GAAqBD,WAAW,CAACE,MAAZ,CAAmBC,MAAxC;AACD,KA/FkB;;AAAA,UAiGnBC,mBAjGmB,GAiGG,iBAAwB;AAAA,UAAZC,KAAY,SAAtBC,OAAsB,CAAZD,KAAY;AAC5C,UAAIE,YAAY,GAAGF,KAAnB;;AAEA,UAAI,MAAKrB,KAAL,CAAWwB,SAAf,EAA0B;AACxB,YAAIC,IAAJ;AACA,YAAIC,KAAJ;;AAEA,YAAI,MAAK1B,KAAL,CAAW2B,SAAf,EAA0B;AACxBF,UAAAA,IAAI,GAAGhC,MAAM,CAAC4B,KAAD,CAAN,CAAcO,MAAd,CAAqB,MAAK5B,KAAL,CAAWwB,SAAhC,CAAP;AACAE,UAAAA,KAAK,GAAGjC,MAAM,GAAGmC,MAAT,CAAgB,MAAK5B,KAAL,CAAWwB,SAA3B,CAAR;AACD,SAHD,MAGO;AACLC,UAAAA,IAAI,GAAGjC,KAAK,CAAC6B,KAAD,CAAL,CAAaQ,QAAb,CAAsB,MAAK7B,KAAL,CAAWwB,SAAjC,CAAP;AACAE,UAAAA,KAAK,GAAGlC,KAAK,GAAGqC,QAAR,CAAiB,MAAK7B,KAAL,CAAWwB,SAA5B,CAAR;AACD;;AAED,YAAMM,WAAW,GAAGtC,KAAK,CAACuC,OAAN,CAAcvC,KAAK,CAACwC,aAApB,EAAmCN,KAAnC,IAA4C9B,OAAO,CAACkC,WAAxE;AACAP,QAAAA,YAAY,GAAGE,IAAI,KAAKC,KAAT,GAAoBI,WAApB,UAAoCL,IAApC,GAA6CA,IAA5D;AACD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,gBAAgB,EAAE,KAAxB;AAA+B,QAAA,KAAK,EAAE,CAAC,MAAKQ,KAAL,CAAWC,WAAZ,EAAyB,MAAKlC,KAAL,CAAWmC,YAApC,CAAtC;AAAyF,QAAA,QAAQ,EAAE,MAAKpB,cAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyHQ,YAAzH,CADF;AAGD,KAvHkB;;AAAA,UAyHnBa,YAzHmB,GAyHJ,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC9B,aAAOlD,CAAC,CAACmD,UAAF,CAAa,MAAKvC,KAAL,CAAWoC,YAAxB,IAAwC,MAAKpC,KAAL,CAAWoC,YAAX,CAAwBC,IAAxB,EAA8BC,KAA9B,CAAxC,GAA+EE,MAAM,CAACF,KAAD,CAA5F;AACD,KA3HkB;;AAEjB,UAAKL,KAAL,GAAavC,gBAAgB,CAACM,KAAK,CAACyC,KAAP,CAA7B;AAEA,UAAKnC,WAAL,GAAmBlB,CAAC,CAACiB,GAAF,CAAML,KAAN,EAAa,mBAAb,CAAnB;AACA,UAAKO,SAAL,GAAiB,KAAjB;AACA,UAAKJ,aAAL,GAAqB,KAArB;AAEA,UAAKuC,iBAAL,GAAyB;AACvBC,MAAAA,2BAA2B,EAAE;AADN,KAAzB;AAGA,UAAKC,IAAL,GAAYvD,KAAK,CAACwD,SAAN,EAAZ;AAXiB;AAYlB;;;;oCAEepB,I,EAAM;AACpB,UAAIqB,CAAJ;;AACA1D,MAAAA,CAAC,CAAC2D,GAAF,CAAM,KAAK/C,KAAL,CAAWgD,QAAjB,EAA2B,UAAC1B,OAAD,EAAUgB,KAAV,EAAoB;AAE7C,YAAIhB,OAAO,CAACD,KAAR,KAAkBI,IAAtB,EAA4B;AAC1BqB,UAAAA,CAAC,GAAGR,KAAJ;AACA;AACD;AACF,OAND;;AAOA,aAAOQ,CAAP;AACD;;;wCAEmB;AAAA;;AAAA,UACXrB,IADW,GACH,KAAKzB,KAAL,CAAWS,OADR,CACXgB,IADW;;AAElB,UAAIA,IAAI,KAAK,KAAKnB,WAAlB,EAA+B;AAC7B2C,QAAAA,UAAU,CAAC,YAAM;AACf,cAAMC,YAAY,GAAG,MAAI,CAACC,eAAL,CAAqB1B,IAArB,CAArB;;AACA,UAAA,MAAI,CAAC2B,eAAL,CAAqBF,YAArB;AACD,SAHS,EAGP,GAHO,CAAV;AAID;AACF;;;uCAEkBG,S,EAAW;AAAA,gCACC,KAAKrD,KAAL,CAAWS,OADZ;AAAA,UACrB6C,YADqB,uBACrBA,YADqB;AAAA,UACP7B,IADO,uBACPA,IADO;;AAE5B,UAAIA,IAAI,KAAK4B,SAAS,CAAC5C,OAAV,CAAkBgB,IAA/B,EAAqC;AAEnC,YAAI6B,YAAY,KAAKxD,cAAc,CAACY,SAAhC,IAA6C4C,YAAY,KAAKxD,cAAc,CAACyD,aAAjF,EAAgG;AAC9F,cAAML,YAAY,GAAG,KAAKC,eAAL,CAAqB1B,IAArB,CAArB;AACA,eAAK2B,eAAL,CAAqBF,YAArB;AACD;AACF;AACF;;;oCAEeA,Y,EAAc;AAC5B,UAAI,KAAKN,IAAL,CAAUY,OAAV,IAAqBN,YAAY,KAAKO,SAA1C,EAAqD;AACnD,aAAKtD,aAAL,GAAqB,IAArB;AACA,aAAKG,WAAL,GAAmB,KAAKN,KAAL,CAAWgD,QAAX,CAAoBE,YAApB,EAAkC7B,KAArD;AAEA,aAAKuB,IAAL,CAAUY,OAAV,CAAkBE,gBAAlB,CAAmC;AACjCC,UAAAA,QAAQ,EAAE,IADuB;AAEjCT,UAAAA,YAAY,EAAEA,YAFmB;AAGjCU,UAAAA,SAAS,EAAE,CAHsB;AAIjCC,UAAAA,YAAY,EAAE,CAJmB;AAKjCC,UAAAA,UAAU,EAAElE,OAAO,CAACmE,SAAR,GAAoB,KAAK9C,aAAzB,GAAyC;AALpB,SAAnC;AAOD;AACF;;;6BAiEQ;AACP,aACE,oBAAC,WAAD,eACM,KAAKjB,KADX;AAEE,QAAA,GAAG,EAAE,KAAK4C,IAFZ;AAGE,QAAA,YAAY,EAAE,KAAKR,YAHrB;AAIE,QAAA,4BAA4B,EAAE,KAJhC;AAKE,QAAA,sBAAsB,EAAE,KAAKnC,sBAL/B;AAME,QAAA,iBAAiB,EAAE,KAAKyC,iBAN1B;AAOE,QAAA,mBAAmB,EAAE,KAAKtB,mBAP5B;AAQE,QAAA,QAAQ,EAAE,KAAKT,QARjB;AASE,QAAA,qBAAqB,EAAE,KAAKE,qBAT9B;AAUE,QAAA,mBAAmB,EAAE,KAAKC,mBAV5B;AAWE,QAAA,qBAAqB,EAAE,+BAACkD,IAAD,EAAU;AAAEC,UAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb,EAA6CF,IAA7C;AAAqD,SAX1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAgBD;;;;EAjKsB1E,S;;AAAnBS,U,CACGoE,W,GAAc,Y;AADjBpE,U,CAGGqE,S,mCACFC,WAAW,CAACD,S;AAEf5C,EAAAA,SAAS,EAAEjC,SAAS,CAAC+E,M;AAGrB3C,EAAAA,SAAS,EAAEpC,SAAS,CAACgF,I;AAErBpC,EAAAA,YAAY,EAAE5C,SAAS,CAACiF,SAAV,CAAoB,CAACjF,SAAS,CAACkF,MAAX,EAAmBlF,SAAS,CAACmF,MAA7B,EAAqCnF,SAAS,CAACoF,KAA/C,CAApB;;AAXZ5E,U,CAcG6E,Y,GAAe;AACpBpD,EAAAA,SAAS,EAAE,aADS;AAEpBqD,EAAAA,2BAA2B,EAAE;AAFT,C;AA0JxB,eAAelF,kBAAkB,CAACI,UAAD,CAAjC","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {SectionList, Text} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport moment from 'moment';\nimport styleConstructor from './style';\nimport asCalendarConsumer from './asCalendarConsumer';\n\n\nconst commons = require('./commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\n/**\n * @description: AgendaList component\n * @extends: SectionList\n * @notes: Should be wrapped in CalendarProvider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass AgendaList extends Component {\n  static displayName = 'AgendaList';\n\n  static propTypes = {\n    ...SectionList.propTypes,\n    /** day format in section title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    dayFormat: PropTypes.string,\n    /** whether to use moment.js for date string formatting \n     * (remember to pass 'dayFormat' with appropriate format, like 'dddd, MMM D') */\n    useMoment: PropTypes.bool,\n    /** style passed to the section view */\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n  }\n\n  static defaultProps = {\n    dayFormat: 'dddd, MMM d',\n    stickySectionHeadersEnabled: true\n  }\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n\n    this._topSection = _.get(props, 'sections[0].title');\n    this.didScroll = false;\n    this.sectionScroll = false;\n\n    this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n    };\n    this.list = React.createRef();\n  }\n\n  getSectionIndex(date) {\n    let i;\n    _.map(this.props.sections, (section, index) => {\n      // NOTE: sections titles should match current date format!!!\n      if (section.title === date) {\n        i = index;\n        return;\n      }\n    });\n    return i;\n  }\n\n  componentDidMount() {\n    const {date} = this.props.context;\n    if (date !== this._topSection) {\n      setTimeout(() => {\n        const sectionIndex = this.getSectionIndex(date);\n        this.scrollToSection(sectionIndex);\n      }, 500);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {updateSource, date} = this.props.context;\n    if (date !== prevProps.context.date) {\n      // NOTE: on first init data should set first section to the current date!!!\n      if (updateSource !== UPDATE_SOURCES.LIST_DRAG && updateSource !== UPDATE_SOURCES.CALENDAR_INIT) {\n        const sectionIndex = this.getSectionIndex(date);\n        this.scrollToSection(sectionIndex);\n      }\n    }\n  }\n\n  scrollToSection(sectionIndex) {\n    if (this.list.current && sectionIndex !== undefined) {\n      this.sectionScroll = true; // to avoid setDate() in onViewableItemsChanged\n      this._topSection = this.props.sections[sectionIndex].title;\n\n      this.list.current.scrollToLocation({\n        animated: true,\n        sectionIndex: sectionIndex,\n        itemIndex: 0,\n        viewPosition: 0, // position at the top\n        viewOffset: commons.isAndroid ? this.sectionHeight : 0\n      });\n    }\n  }\n\n  onViewableItemsChanged = ({viewableItems}) => {\n    if (viewableItems && !this.sectionScroll) {\n      const topSection = _.get(viewableItems[0], 'section.title');\n      if (topSection && topSection !== this._topSection) {\n        this._topSection = topSection;\n        if (this.didScroll) { // to avoid setDate() on first load (while setting the initial context.date value)\n          _.invoke(this.props.context, 'setDate', this._topSection, UPDATE_SOURCES.LIST_DRAG);\n        }\n      }\n    }\n  }\n\n  onScroll = (event) => {\n    if (!this.didScroll) {\n      this.didScroll = true;\n    }\n    _.invoke(this.props, 'onScroll', event);\n  }\n\n  onMomentumScrollBegin = (event) => {\n    _.invoke(this.props.context, 'setDisabled', true);\n    _.invoke(this.props, 'onMomentumScrollBegin', event);\n  }\n\n  onMomentumScrollEnd = (event) => {\n    // when list momentum ends AND when scrollToSection scroll ends\n    this.sectionScroll = false;\n    _.invoke(this.props.context, 'setDisabled', false);\n    _.invoke(this.props, 'onMomentumScrollEnd', event);\n  }\n\n  onHeaderLayout = ({nativeEvent}) => {\n    this.sectionHeight = nativeEvent.layout.height;\n  }\n\n  renderSectionHeader = ({section: {title}}) => {\n    let sectionTitle = title;\n\n    if (this.props.dayFormat) {\n      let date;\n      let today;\n\n      if (this.props.useMoment) {\n        date = moment(title).format(this.props.dayFormat);\n        today = moment().format(this.props.dayFormat);\n      } else {\n        date = XDate(title).toString(this.props.dayFormat);\n        today = XDate().toString(this.props.dayFormat);\n      }\n\n      const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n      sectionTitle = date === today ? `${todayString}, ${date}` : date;\n    }\n\n    return (\n      <Text allowFontScaling={false} style={[this.style.sectionText, this.props.sectionStyle]} onLayout={this.onHeaderLayout}>{sectionTitle}</Text>\n    );\n  }\n\n  keyExtractor = (item, index) => {\n    return _.isFunction(this.props.keyExtractor) ? this.props.keyExtractor(item, index) : String(index);\n  }\n\n  render() {\n    return (\n      <SectionList\n        {...this.props}\n        ref={this.list}\n        keyExtractor={this.keyExtractor}\n        showsVerticalScrollIndicator={false}\n        onViewableItemsChanged={this.onViewableItemsChanged}\n        viewabilityConfig={this.viewabilityConfig}\n        renderSectionHeader={this.renderSectionHeader}\n        onScroll={this.onScroll}\n        onMomentumScrollBegin={this.onMomentumScrollBegin}\n        onMomentumScrollEnd={this.onMomentumScrollEnd}\n        onScrollToIndexFailed={(info) => { console.warn('onScrollToIndexFailed info: ', info); }}\n        // getItemLayout={this.getItemLayout} // onViewableItemsChanged is not updated when list scrolls!!!\n      />\n    );\n  }\n\n  // getItemLayout = (data, index) => {\n  //   return {length: commons.screenWidth, offset: commons.screenWidth  * index, index};\n  // }\n}\n\nexport default asCalendarConsumer(AgendaList);\n"]},"metadata":{},"sourceType":"module"}