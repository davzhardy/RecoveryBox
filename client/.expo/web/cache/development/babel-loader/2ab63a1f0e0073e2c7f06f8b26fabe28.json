{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DanielAlejandro\\\\Documents\\\\GitHub\\\\codeworks_exercises\\\\Senior\\\\week-8-practice\\\\RecoveryBox\\\\client\\\\components\\\\graphs\\\\FeelingGraph.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport { MediumAppText, BoldAppText } from \"../../styles/text\";\nimport Divider from \"../Divider\";\nimport { VictoryArea, VictoryBar, VictoryChart, VictoryAxis } from \"./Victory\";\nimport _ from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Defs, LinearGradient, Stop, Svg } from \"react-native-svg\";\nimport colors from \"../../styles/colors\";\n\nfunction FeelingGraph() {\n  var chartTimePeriod = useSelector(function (state) {\n    return state.helper.chartTimePeriod;\n  });\n  var millisPerDay = 1000 * 60 * 60 * 24;\n  var week = 7 * millisPerDay;\n  var month = 30 * millisPerDay;\n  var now = useSelector(function (state) {\n    return state.helper.now;\n  });\n\n  function convertTime(string) {\n    if (string === 'week') return week;else if (string === 'month') return month;else return now;\n  }\n\n  var timePeriod = convertTime(chartTimePeriod);\n  var lastDay = now - timePeriod;\n  var historicalData = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var periodData = _.filter(historicalData, function (el) {\n    return el.date > lastDay;\n  });\n\n  function compareItem(a, b) {\n    if (a.date < b.date) {\n      return -1;\n    } else if (a.date > b.date) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  var filteredData = periodData.sort(compareItem);\n\n  var feelingData = _.map(filteredData, function (el) {\n    return el.feeling;\n  });\n\n  var dateData = _.map(filteredData, function (el) {\n    return el.date;\n  });\n\n  var formattedDateData = dateData.map(function (date) {\n    return DateTime.fromMillis(date).toFormat('LLL dd');\n  });\n\n  var meetingData = _.map(filteredData, function (el) {\n    return el.meetings;\n  });\n\n  function create(array1, array2, array3) {\n    var list = [];\n    var count = 0;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array1), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n      var obj = {};\n      obj.date = i;\n      obj.feeling = array2[count];\n      obj.meetings = array3[count];\n      list.push(obj);\n      count++;\n    }\n\n    return list;\n  }\n\n  var combinedList = create(formattedDateData, feelingData, meetingData);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(BoldAppText, {\n    style: {\n      color: colors.lightGray,\n      marginBottom: -40,\n      fontSize: 14,\n      alignSelf: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Feeling & Meetings\"), React.createElement(VictoryChart, {\n    width: 400,\n    height: 280,\n    style: {\n      parent: {\n        overflow: 'visible'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(VictoryArea, {\n    data: combinedList,\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 1000\n      }\n    },\n    x: \"date\",\n    y: \"feeling\",\n    style: {\n      data: {\n        fill: colors.green,\n        opacity: 0.75\n      },\n      parent: {}\n    },\n    interpolation: \"natural\",\n    domain: {\n      y: [-2, 12]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(VictoryArea, {\n    data: combinedList,\n    animate: {\n      duration: 2000,\n      onLoad: {\n        duration: 1000\n      }\n    },\n    x: \"date\",\n    y: \"meetings\",\n    style: {\n      data: {\n        fill: colors.blue,\n        opacity: 0.6\n      },\n      parent: {}\n    },\n    interpolation: \"natural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), React.createElement(VictoryAxis, {\n    tickCount: 4,\n    style: {\n      tickLabels: {\n        fontSize: 10\n      },\n      axis: {\n        stroke: \"none\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.keyWrapper, {\n      marginBottom: -10\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.box1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Feeling\")), React.createElement(View, {\n    style: styles.keyWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.box2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), React.createElement(MediumAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Meetings\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  key: {\n    position: 'absolute',\n    flexDirection: 'column',\n    left: 10,\n    top: 30\n  },\n  keyWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  box1: {\n    backgroundColor: colors.green,\n    width: 7,\n    height: 7,\n    marginTop: -7,\n    marginRight: 5\n  },\n  box2: {\n    backgroundColor: colors.blue,\n    width: 7,\n    height: 7,\n    marginTop: -7,\n    marginRight: 5\n  }\n});\nexport default FeelingGraph;","map":{"version":3,"sources":["C:/Users/DanielAlejandro/Documents/GitHub/codeworks_exercises/Senior/week-8-practice/RecoveryBox/client/components/graphs/FeelingGraph.js"],"names":["React","useSelector","MediumAppText","BoldAppText","Divider","VictoryArea","VictoryBar","VictoryChart","VictoryAxis","_","DateTime","Defs","LinearGradient","Stop","Svg","colors","FeelingGraph","chartTimePeriod","state","helper","millisPerDay","week","month","now","convertTime","string","timePeriod","lastDay","historicalData","periodData","filter","el","date","compareItem","a","b","filteredData","sort","feelingData","map","feeling","dateData","formattedDateData","fromMillis","toFormat","meetingData","meetings","create","array1","array2","array3","list","count","i","obj","push","combinedList","styles","container","color","lightGray","marginBottom","fontSize","alignSelf","parent","overflow","duration","onLoad","data","fill","green","opacity","y","blue","tickLabels","axis","stroke","key","keyWrapper","box1","box2","StyleSheet","flex","backgroundColor","alignItems","justifyContent","position","flexDirection","left","top","width","height","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport { useSelector} from \"react-redux\";\nimport { MediumAppText, BoldAppText } from '../../styles/text'\nimport Divider from '../Divider'\nimport { VictoryArea, VictoryBar, VictoryChart, VictoryAxis } from './Victory';\nimport _ from 'lodash';\nimport { DateTime } from 'luxon'\nimport {Defs, LinearGradient, Stop, Svg } from \"react-native-svg\";\nimport colors from '../../styles/colors'\n\n\n\nfunction FeelingGraph () {\n\n  const chartTimePeriod = useSelector((state) => state.helper.chartTimePeriod)\n  const millisPerDay = 1000 * 60 * 60 * 24\n  const week = 7*millisPerDay;\n  const month = 30*millisPerDay;\n  const now = useSelector((state) => state.helper.now)\n\n  function convertTime (string) {\n    if (string === 'week') return week;\n    else if (string === 'month') return month;\n    else return now;\n  }\n\n  const timePeriod = convertTime(chartTimePeriod)\n  const lastDay = now - timePeriod\n\n  const historicalData = useSelector((state) => state.historicalData);\n  const periodData = _.filter(historicalData, el => el.date > lastDay)\n\n  function compareItem(a, b){\n    if(a.date < b.date){\n      return -1;\n    }else if(a.date > b.date){\n      return 1;\n    }else{\n      return 0;\n    }\n  }\n\n  const filteredData = periodData.sort(compareItem)\n  const feelingData = _.map(filteredData, el => el.feeling) \n  const dateData = _.map(filteredData, el => el.date)\n  const formattedDateData = dateData.map(date => DateTime.fromMillis(date).toFormat('LLL dd'))\n  const meetingData = _.map(filteredData, el => el.meetings) \n\n  function create(array1, array2, array3) {\n    let list = [];\n    let count = 0;\n    for (let i of array1) {\n      let obj = {}\n      obj.date = i\n      obj.feeling = array2[count]\n      obj.meetings = array3[count]\n      list.push(obj)\n      count++\n    }\n    return list\n  }\n\n  const combinedList = create(formattedDateData, feelingData, meetingData)\n\n  return (\n    <View style={styles.container}>\n      <BoldAppText style={{color: colors.lightGray, marginBottom:-40, fontSize:14, alignSelf:'flex-start',}}>Feeling & Meetings</BoldAppText>\n      <VictoryChart width={400} height={280} style= {{\n        parent: {\n          overflow: 'visible',\n        }\n      }}>\n        <VictoryArea \n        data={combinedList} \n        animate={{\n          duration: 2000,\n          onLoad: { duration: 1000 }\n        }}\n        x=\"date\" \n        y=\"feeling\"\n        style={{ \n          data: { \n            fill: colors.green,\n            opacity: 0.75,\n          },\n          parent: {}\n          }}\n        interpolation=\"natural\"\n        domain={{y: [-2, 12]}}\n        />\n        <VictoryArea\n        data={combinedList} \n        animate={{\n          duration: 2000,\n          onLoad: { duration: 1000 }\n        }}\n        x=\"date\" \n        y=\"meetings\"\n        style={{ \n          data: { \n            fill: colors.blue,\n            opacity: 0.6\n          },\n          parent: {}\n          }}\n        interpolation=\"natural\"\n        />\n        <VictoryAxis\n          tickCount={4}\n          style = {{\n            tickLabels: {fontSize: 10},\n            axis: {stroke: \"none\"},\n          }}\n        />\n      </VictoryChart>\n      <View style={styles.key}>\n        <View style={[styles.keyWrapper, {marginBottom:-10}]}>\n          <View style={styles.box1}/>\n          <MediumAppText>Feeling</MediumAppText>\n        </View>\n        <View style={styles.keyWrapper}>\n          <View style={styles.box2}/>\n          <MediumAppText>Meetings</MediumAppText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  key: {\n    position: 'absolute',\n    flexDirection: 'column',\n    left:10,\n    top:30,\n  },\n  keyWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  box1: {\n    backgroundColor: colors.green,\n    width: 7,\n    height: 7,\n    marginTop: -7,\n    marginRight: 5,\n  },\n  box2: {\n    backgroundColor: colors.blue,\n    width: 7,\n    height: 7,\n    marginTop: -7,\n    marginRight: 5,\n  },\n});\n\n\nexport default FeelingGraph;"]},"metadata":{},"sourceType":"module"}