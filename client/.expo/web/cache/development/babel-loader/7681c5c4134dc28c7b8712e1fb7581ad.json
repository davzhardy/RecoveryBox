{"ast":null,"code":"var _jsxFileName = \"/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/components/HomeWelcome.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport { BoldAppText, MediumAppText } from \"../styles/text\";\nimport Divider from \"../components/Divider\";\nimport { useNavigation } from '@react-navigation/native';\nimport { DateTime, Duration } from 'luxon';\n\nfunction HomeWelcome(_ref) {\n  var _ref$historicalDate = _ref.historicalDate,\n      historicalDate = _ref$historicalDate === void 0 ? false : _ref$historicalDate;\n  var navigation = useNavigation();\n  var todaysDate = useSelector(function (state) {\n    return state.helper.now;\n  });\n  var dateToUse = historicalDate ? historicalDate : todaysDate;\n  var now = DateTime.fromMillis(dateToUse);\n  var dayFormat = '';\n  if (now.day === 1 || now.day === 21 || now.day === 31) dayFormat = 'st';else if (now.day === 2 || now.day === 22) dayFormat = 'nd';else if (now.day === 3 || now.day === 23) dayFormat = 'rd';else dayFormat = 'th';\n  var formattedDate = now.toFormat(\"d'\" + dayFormat + \"' MMM y\");\n  var duration = Duration.fromMillis(todaysDate - historicalDate).toFormat('d');\n  var username = useSelector(function (state) {\n    return state.user.username;\n  });\n  var displayDate = historicalDate ? duration + \" days ago\" : 'Today';\n  var displayUsername = historicalDate ? React.createElement(React.Fragment, null) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 52\n    }\n  }, React.createElement(BoldAppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 58\n    }\n  }, \"Hello \", username, \" !\"));\n\n  if (historicalDate) {\n    return React.createElement(View, {\n      style: [styles.container, styles.containerhistorical],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, React.createElement(BoldAppText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, formattedDate), React.createElement(MediumAppText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, displayDate)), React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, displayUsername);\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    marginRight: 10,\n    marginLeft: 10,\n    marginTop: 5\n  },\n  icons: {\n    width: 34,\n    height: 34,\n    resizeMode: \"contain\"\n  },\n  containerhistorical: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  }\n});\nexport default HomeWelcome;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/components/HomeWelcome.js"],"names":["React","useSelector","BoldAppText","MediumAppText","Divider","useNavigation","DateTime","Duration","HomeWelcome","historicalDate","navigation","todaysDate","state","helper","now","dateToUse","fromMillis","dayFormat","day","formattedDate","toFormat","duration","username","user","displayDate","displayUsername","styles","container","containerhistorical","StyleSheet","create","borderRadius","backgroundColor","elevation","margin","paddingHorizontal","paddingVertical","header","alignItems","justifyContent","flexDirection","marginRight","marginLeft","marginTop","icons","width","height","resizeMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, TouchableOpacity, Image } from 'react-native';\nimport { useSelector } from \"react-redux\";\nimport { BoldAppText, MediumAppText } from '../styles/text'\nimport Divider from '../components/Divider'\nimport { useNavigation } from '@react-navigation/native';\nimport { DateTime, Duration } from 'luxon'\n\nfunction HomeWelcome ( { historicalDate = false }) {\n\n  const navigation = useNavigation();\n\n  const todaysDate = useSelector((state) => state.helper.now);\n\n  const dateToUse = historicalDate ? historicalDate : todaysDate;\n  const now = DateTime.fromMillis(dateToUse);\n  let dayFormat = ''\n\n  if (now.day === 1 || now.day === 21 || now.day === 31)\n  dayFormat = 'st';\n  else if (now.day === 2 || now.day === 22)\n  dayFormat = 'nd';\n  else if (now.day === 3 || now.day ===23)\n  dayFormat = 'rd';\n  else dayFormat = 'th';\n\n  const formattedDate = now.toFormat(`d'${dayFormat}' MMM y`)  \n  const duration = Duration.fromMillis((todaysDate - historicalDate)).toFormat('d')\n\n  const username = useSelector((state) => state.user.username)\n\n  const displayDate = historicalDate ? `${duration} days ago` : 'Today'\n  const displayUsername = historicalDate ? <></> : <View><BoldAppText>Hello {username} !</BoldAppText></View>\n\n  if (historicalDate) {\n    return (\n      <View style={[styles.container, styles.containerhistorical]}>\n        <View>\n          <BoldAppText>{formattedDate}</BoldAppText>\n          <MediumAppText >{displayDate}</MediumAppText>\n        </View>\n        <Divider/>\n      </View>\n    )\n  } else {\n  return (\n      <View>\n        {displayUsername}\n      </View>\n  );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 5,\n    backgroundColor: 'white',\n    elevation: 1,\n    margin: 10,\n    paddingHorizontal: 10,\n    paddingVertical: 12,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-around',\n    flexDirection: 'row',\n    marginRight: 10,\n    marginLeft: 10,\n    marginTop: 5,\n\n  },\n  icons: {\n    width: 34,\n    height: 34,\n    resizeMode: \"contain\",\n  },\n  containerhistorical: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n});\n\n\n\nexport default HomeWelcome;"]},"metadata":{},"sourceType":"module"}