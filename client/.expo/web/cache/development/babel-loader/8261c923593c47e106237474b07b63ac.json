{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  todaysQuote: false\n};\n\nvar quoteReducer = function quoteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATE_QUOTE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        todaysQuote: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default quoteReducer;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/redux/quoteReducer.js"],"names":["initialState","todaysQuote","quoteReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,6CACKF,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFtB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,YAAf","sourcesContent":["const initialState = {\n  todaysQuote: false,\n}\n\nconst quoteReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_QUOTE\":\n      return {\n        ...state,\n        todaysQuote: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default quoteReducer;"]},"metadata":{},"sourceType":"module"}