{"ast":null,"code":"var _jsxFileName = \"/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/containers/ModifySuggestionsList.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { MediumAppText } from \"../styles/text\";\nimport ModifySuggestionItem from \"../components/ModifySuggestionItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport colors from \"../styles/colors\";\n\nfunction ModifySuggestionsList(_ref) {\n  var _this = this;\n\n  var goBack = _ref.navigation.goBack;\n  var dispatch = useDispatch();\n  var fullSuggestionsList = useSelector(function (state) {\n    return state.settings.suggestionSettings.fullSuggestionsList;\n  });\n  var suggestionList = useSelector(function (state) {\n    return state.settings.suggestionSettings.suggestionsList;\n  });\n\n  var addTick = function addTick(list, suggestion) {\n    if (!list.includes(suggestion)) {\n      dispatch({\n        type: 'ADDTO_SUGGESTIONS_LIST',\n        payload: suggestion\n      });\n    } else {\n      dispatch({\n        type: 'REMOVEFROM_SUGGESTIONS_LIST',\n        payload: suggestion\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(MediumAppText, {\n    style: {\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"CUSTOMISE YOUR DAILY SUGGESTIONS\")), React.createElement(ScrollView, {\n    contentContainerStyle: {\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, fullSuggestionsList.map(function (suggestion) {\n    return React.createElement(ModifySuggestionItem, {\n      key: suggestion,\n      name: suggestion,\n      addTick: addTick,\n      selected: suggestionList.includes(suggestion) ? true : false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    });\n  }), React.createElement(TouchableOpacity, {\n    style: styles.return,\n    onPress: function onPress() {\n      goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/close.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: 25\n  },\n  image: {\n    height: 30,\n    width: 30\n  },\n  return: {\n    marginTop: 20,\n    height: 50,\n    width: 50,\n    borderRadius: 50,\n    backgroundColor: colors.blue,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default ModifySuggestionsList;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/containers/ModifySuggestionsList.js"],"names":["React","useState","MediumAppText","ModifySuggestionItem","useDispatch","useSelector","colors","ModifySuggestionsList","goBack","navigation","dispatch","fullSuggestionsList","state","settings","suggestionSettings","suggestionList","suggestionsList","addTick","list","suggestion","includes","type","payload","styles","container","alignItems","marginTop","map","return","image","require","StyleSheet","create","flex","backgroundColor","justifyContent","height","width","borderRadius","blue"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, TouchableOpacity, Image } from 'react-native';\nimport { MediumAppText } from '../styles/text'\nimport ModifySuggestionItem from '../components/ModifySuggestionItem'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport colors from '../styles/colors';\n\nfunction ModifySuggestionsList ({ navigation: { goBack } }) {\n\n// TODO refactor to be a modal screen\n\n  const dispatch = useDispatch()\n  const fullSuggestionsList = useSelector((state) => state.settings.suggestionSettings.fullSuggestionsList);\n  const suggestionList = useSelector((state) => state.settings.suggestionSettings.suggestionsList);\n\n  const addTick = (list, suggestion) => {\n    if (!list.includes(suggestion)) {\n      dispatch({\n        type: 'ADDTO_SUGGESTIONS_LIST',\n        payload: suggestion\n      });\n    } else {\n      dispatch({\n        type: 'REMOVEFROM_SUGGESTIONS_LIST',\n        payload: suggestion\n      })\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{alignItems: 'center'}}>\n        <MediumAppText style={{marginTop: 25}}>CUSTOMISE YOUR DAILY SUGGESTIONS</MediumAppText>\n      </View>\n      <ScrollView contentContainerStyle={{alignItems: 'center'}}>\n        {fullSuggestionsList.map(\n          suggestion => \n          <ModifySuggestionItem\n            key={suggestion}\n            name={suggestion}\n            addTick={addTick}\n            selected={suggestionList.includes(suggestion) ? true : false}\n          />\n        )}\n        <TouchableOpacity style={styles.return} onPress={()=> {goBack()}}>\n          <Image style={styles.image} source={require('../assets/close.png')}/>\n        </TouchableOpacity>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginTop: 25,\n  },\n  image: {\n    height: 30,\n    width: 30,\n  },\n  return: {\n    marginTop: 20,\n    height: 50,\n    width: 50,\n    borderRadius: 50,\n    backgroundColor: colors.blue,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nexport default ModifySuggestionsList;"]},"metadata":{},"sourceType":"module"}