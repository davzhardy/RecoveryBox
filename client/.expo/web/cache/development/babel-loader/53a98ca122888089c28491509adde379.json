{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {};\n\nvar historicalDataReducer = function historicalDataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        key: action.payload\n      });\n\n    case \"UPDATE_HISTORICALDATA_WITH_HISTORICALINFO\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newkey: action.payload\n      });\n\n    case \"CREATE_HISTORICALDATA\":\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default historicalDataReducer;","map":{"version":3,"sources":["C:/Users/DanielAlejandro/Documents/GitHub/codeworks_exercises/Senior/week-8-practice/RecoveryBox/client/redux/historicalDataReducer.js"],"names":["initialState","historicalDataReducer","state","action","type","key","payload","newkey"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG,EAArB;;AAMA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sCAAL;AACE,6CAAWF,KAAX;AAAkBG,QAAAA,GAAG,EAAEF,MAAM,CAACG;AAA9B;;AACF,SAAK,2CAAL;AACE,6CAAWJ,KAAX;AAAkBK,QAAAA,MAAM,EAAEJ,MAAM,CAACG;AAAjC;;AACF,SAAK,uBAAL;AACE,6CAAWJ,KAAX,GAAqBC,MAAM,CAACG,OAA5B;;AACF;AACE,aAAOJ,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,qBAAf","sourcesContent":["const initialState = {\n \n}\n\n// TODO refactor this to some kind of array so the data is more easily accessible\n\nconst historicalDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_HISTORICALDATA_WITH_DAILYINFO\":\n      return {...state, key: action.payload}\n    case \"UPDATE_HISTORICALDATA_WITH_HISTORICALINFO\":\n      return {...state, newkey: action.payload}\n    case \"CREATE_HISTORICALDATA\":\n      return {...state, ...action.payload}\n    default:\n      return state;\n  }\n}\n\nexport default historicalDataReducer;\n\n\n// TODO delete this historical data when im 100% sure I dont need it \n // 1600300800000: {\n  //   date: 1600300800000,\n  //   meetings: 2,\n  //   feeling: 5,\n  //   moods: ['tired', 'happy', 'bored'],\n  //   suggestions: ['Meetings', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself', 'Gratitude', 'Step 10s', 'Inventory', 'Called a Newcomer'],\n  // },\n  // 1600387200000: {\n  //   date: 1600387200000,\n  //   meetings: 1,\n  //   feeling: 4,\n  //   moods: ['tired', 'happy', 'down'],\n  //   suggestions: ['Gratitude', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself']\n  // },\n  // 1600473600000: {\n  //   date: 1600473600000,\n  //   meetings: 0,\n  //   feeling: 3,\n  //   moods: ['elated', 'happy', 'sad'],\n  //   suggestions: ['Inventory', 'Called a Newcomer', 'Prayer', 'Meditation', 'Useful', 'Kind to Myself']\n  // },\n  // 1600560000000: {\n  //   date: 1600560000000,\n  //   meetings: 2,\n  //   feeling: 2,\n  //   moods: ['joyful', 'happy', 'sad'],\n  //   suggestions: ['Kind to Myself']\n  // },\n  // 1600646400000: {\n  //   date: 1600646400000,\n  //   meetings: 5,\n  //   feeling: 5,\n  //   moods: ['bored', 'happy', 'sad'],\n  //   suggestions: ['Prayer', 'Meditation', 'Useful', 'Kind to Myself']\n  // },\n  // 1600819200000: {\n  //   date: 1600819200000,\n  //   meetings: 2,\n  //   feeling: 10,\n  //   moods: [],\n  //   suggestions: []\n  // },\n  // 1600905600000: {\n  //   date: 1600905600000,\n  //   meetings: 0,\n  //   feeling: 9,\n  //   moods: ['stressed', 'happy', 'sad'],\n  //   suggestions: ['Prayer', 'Meditation', 'Useful', 'Kind to Myself']\n  // },\n  // 1601078400000: {\n  //   date: 1601078400000,\n  //   meetings: 5,\n  //   feeling: 7,\n  //   moods: ['tired', 'happy', 'sad'],\n  //   suggestions: ['Prayer', 'Meditation', 'Useful', 'Kind to Myself']\n  // },"]},"metadata":{},"sourceType":"module"}