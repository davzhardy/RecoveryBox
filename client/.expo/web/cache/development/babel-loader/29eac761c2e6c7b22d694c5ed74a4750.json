{"ast":null,"code":"var _jsxFileName = \"/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/graphs/SuggestionsVisuals.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useSelector } from \"react-redux\";\nimport { MediumAppText, BoldAppText } from \"../../styles/text\";\nimport Divider from \"../Divider\";\nimport { VictoryArea, VictoryScatter, VictoryGroup, VictoryChart, VictoryBar } from \"./Victory\";\nimport colors from \"../../styles/colors\";\nimport _ from 'lodash';\nimport { DateTime } from 'luxon';\nimport { Defs, LinearGradient, Stop } from \"react-native-svg\";\n\nfunction SuggestionsVisuals() {\n  var suggestionsToShow = 5;\n  var chartTimePeriod = useSelector(function (state) {\n    return state.helper.chartTimePeriod;\n  });\n  var millisPerDay = 1000 * 60 * 60 * 24;\n  var week = 7 * millisPerDay;\n  var month = 30 * millisPerDay;\n  var now = useSelector(function (state) {\n    return state.helper.now;\n  });\n\n  function convertTime(string) {\n    if (string === 'week') return week;else if (string === 'month') return month;else return now;\n  }\n\n  var timePeriod = convertTime(chartTimePeriod);\n  var lastDay = now - timePeriod;\n  var historicalData = useSelector(function (state) {\n    return state.historicalData;\n  });\n\n  var periodData = _.filter(historicalData, function (el) {\n    return el.date > lastDay;\n  });\n\n  var suggestionsData = _.map(periodData, function (el) {\n    return el.suggestions;\n  });\n\n  var fullSuggestionsList = useSelector(function (state) {\n    return state.settings.suggestionSettings.fullSuggestionsList;\n  });\n\n  function create(array) {\n    var obj = {};\n\n    for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n      var i = _step.value;\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(i), _step2; !(_step2 = _iterator2()).done;) {\n        var j = _step2.value;\n\n        if (Object.keys(obj).includes(j)) {\n          obj[j] = obj[j] + 1;\n        } else {\n          obj[j] = 1;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function createSuggestions(obj) {\n    var arr = [];\n\n    for (var i in obj) {\n      var newobj = {};\n      newobj.suggestion = i;\n      newobj.value = obj[i];\n      arr.push(newobj);\n    }\n\n    return arr;\n  }\n\n  function topFive(arr, num) {\n    var newArr = [];\n    var max = num;\n\n    for (var i = 0; i < max; i++) {\n      newArr.push(arr[i]);\n    }\n\n    return newArr;\n  }\n\n  function randomNumGen(arr, min, max) {\n    var copyArr = arr.slice();\n    max = Math.floor(max - 1);\n    var newArr = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      var choose = Math.floor(Math.random() * (max - min + 1)) + min;\n      newArr.push(copyArr.splice(choose, 1)[0]);\n      max--;\n    }\n\n    return newArr;\n  }\n\n  var suggestionsObject = create(suggestionsData);\n  var suggestions = createSuggestions(suggestionsObject);\n\n  var sortedSuggestions = _.orderBy(suggestions, ['value'], ['desc']);\n\n  var topSuggestions = topFive(sortedSuggestions, suggestionsToShow);\n  var randomTopSuggestions = randomNumGen(topSuggestions, 0, suggestionsToShow);\n\n  if (suggestionsData.length) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, React.createElement(BoldAppText, {\n      style: {\n        color: colors.lightGray,\n        marginBottom: 0,\n        fontSize: 14,\n        alignSelf: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Top 5 Suggestions\"), React.createElement(VictoryGroup, {\n      width: 300,\n      height: 200,\n      styles: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, React.createElement(VictoryScatter, {\n      domainPadding: {\n        x: [-5, -5]\n      },\n      data: randomTopSuggestions,\n      animate: {\n        duration: 2000,\n        onLoad: {\n          duration: 1000\n        }\n      },\n      x: \"suggestion\",\n      y: \"value\",\n      bubbleProperty: \"value\",\n      maxBubbleSize: 40,\n      minBubbleSize: 10,\n      style: {\n        data: {\n          fill: colors.blue,\n          stroke: 'white',\n          strokeWidth: 2,\n          opacity: 0.8\n        },\n        parent: {},\n        labels: {\n          fill: colors.darkGrayFont,\n          fontSize: 10,\n          color: colors.green\n        }\n      },\n      interpolation: \"natural\",\n      labels: function labels(_ref) {\n        var datum = _ref.datum;\n        return \"\" + datum.suggestion;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, \"Please add some data to display this chart\");\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SuggestionsVisuals;","map":{"version":3,"sources":["/Users/davidhardy/Coding/CodeworksCourse/Senior/Solo Project/RecoveryBox/client/components/graphs/SuggestionsVisuals.js"],"names":["React","useSelector","MediumAppText","BoldAppText","Divider","VictoryArea","VictoryScatter","VictoryGroup","VictoryChart","VictoryBar","colors","_","DateTime","Defs","LinearGradient","Stop","SuggestionsVisuals","suggestionsToShow","chartTimePeriod","state","helper","millisPerDay","week","month","now","convertTime","string","timePeriod","lastDay","historicalData","periodData","filter","el","date","suggestionsData","map","suggestions","fullSuggestionsList","settings","suggestionSettings","create","array","obj","i","j","Object","keys","includes","createSuggestions","arr","newobj","suggestion","value","push","topFive","num","newArr","max","randomNumGen","min","copyArr","slice","Math","floor","length","choose","random","splice","suggestionsObject","sortedSuggestions","orderBy","topSuggestions","randomTopSuggestions","styles","container","color","lightGray","marginBottom","fontSize","alignSelf","x","duration","onLoad","data","fill","blue","stroke","strokeWidth","opacity","parent","labels","darkGrayFont","green","datum","StyleSheet","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["//https://formidable.com/open-source/victory/gallery/area-hover-styles\n\nimport React from 'react';\nimport { StyleSheet, View, Text, Image } from 'react-native';\nimport { useSelector} from \"react-redux\";\nimport { MediumAppText, BoldAppText } from '../../styles/text'\nimport Divider from '../Divider'\nimport { VictoryArea, VictoryScatter, VictoryGroup, VictoryChart, VictoryBar} from './Victory';\nimport colors from '../../styles/colors'\nimport _ from 'lodash';\nimport { DateTime } from 'luxon'\nimport {Defs, LinearGradient, Stop } from \"react-native-svg\";\n\nfunction SuggestionsVisuals () {\n\n  const suggestionsToShow = 5;\n\n  const chartTimePeriod = useSelector((state) => state.helper.chartTimePeriod)\n  const millisPerDay = 1000 * 60 * 60 * 24\n  const week = 7*millisPerDay;\n  const month = 30*millisPerDay;\n  const now = useSelector((state) => state.helper.now)\n\n  function convertTime (string) {\n    if (string === 'week') return week;\n    else if (string === 'month') return month;\n    else return now;\n  }\n\n  const timePeriod = convertTime(chartTimePeriod)\n  const lastDay = now - timePeriod\n\n  const historicalData = useSelector((state) => state.historicalData);\n  const periodData = _.filter(historicalData, el => el.date > lastDay)\n  const suggestionsData = _.map(periodData, el => el.suggestions) \n  const fullSuggestionsList = useSelector((state) => state.settings.suggestionSettings.fullSuggestionsList);\n\n  // TODO alltime broken, to fix\n\n  function create (array) {\n    let obj = {}\n    for (let i of array) {\n      for (let j of i) {\n        if (Object.keys(obj).includes(j)) {\n          obj[j] = obj[j]+1\n        } else {\n          obj[j]= 1\n        }\n      }\n    }\n    return obj\n  }\n\n  function createSuggestions (obj) {\n    let arr = [];\n    for (let i in obj) {\n      let newobj = {}\n      newobj.suggestion = i\n      newobj.value = obj[i]\n      arr.push(newobj)\n    }\n    return arr;\n  }\n\n  function topFive (arr, num) {\n    let newArr= [];\n    let max = num;\n    for (let i =0; i < max; i++) {\n      newArr.push(arr[i]);\n    }\n    return newArr;\n  }\n\n  function randomNumGen (arr, min, max) {\n    let copyArr = arr.slice()\n    max = Math.floor(max-1);\n    let newArr = [];\n    for (let i = 0; i < arr.length; i++){\n      const choose = Math.floor(Math.random() * (max - min + 1)) + min;\n      newArr.push(copyArr.splice(choose,1)[0])\n      max-- \n    }\n    return newArr\n  }\n\n  const suggestionsObject = create(suggestionsData)\n  const suggestions = createSuggestions(suggestionsObject)\n  const sortedSuggestions = _.orderBy(suggestions, ['value'], ['desc'])\n  const topSuggestions = topFive(sortedSuggestions, suggestionsToShow)\n  const randomTopSuggestions = randomNumGen(topSuggestions, 0, suggestionsToShow)\n\n  if (suggestionsData.length) {\n    return (\n      <View style={styles.container}>\n        <BoldAppText style={{color: colors.lightGray, marginBottom:0, fontSize:14, alignSelf:'flex-start',}}>Top 5 Suggestions</BoldAppText>\n        <VictoryGroup width={300} height={200} styles={styles.container} >\n          <VictoryScatter \n            domainPadding={{ x: [-5,-5] }}\n            data={randomTopSuggestions} \n            animate={{\n            duration: 2000,\n            onLoad: { duration: 1000 }\n          }}\n          x={\"suggestion\"} \n          y={\"value\"}\n          bubbleProperty=\"value\"\n          maxBubbleSize={40}\n          minBubbleSize={10}\n          style={{ \n            data: { \n              fill: colors.blue,\n              stroke: 'white',\n              strokeWidth: 2,\n              opacity: 0.8,\n            },\n            parent: {\n            },\n            labels: { \n              fill: colors.darkGrayFont, \n              fontSize: 10,\n              color: colors.green,\n            }\n          }}\n          interpolation=\"natural\"\n          labels={({ datum }) => `${datum.suggestion}`}\n          />\n\n        </VictoryGroup>\n      </View>\n    );\n  } else {\n    return (\n      <p>Please add some data to display this chart</p>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n\nexport default SuggestionsVisuals;"]},"metadata":{},"sourceType":"module"}