{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  meetings: 0,\n  feeling: 0,\n  moods: [],\n  suggestions: []\n};\n\nvar dailyInfoReducer = function dailyInfoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT_DAILY_MEETINGS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        meetings: state.meetings + 1\n      });\n\n    case \"DECREMENT_DAILY_MEETINGS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        meetings: state.meetings - 1\n      });\n\n    case \"UPDATE_FEELING\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        feeling: action.payload\n      });\n\n    case \"ADDTO_SUGGESTIONS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suggestions: [].concat(_toConsumableArray(state.suggestions), [action.payload])\n      });\n\n    case \"REMOVEFROM_SUGGESTIONS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        suggestions: state.suggestions.filter(function (elInList) {\n          return elInList !== action.payload;\n        })\n      });\n\n    case \"UPDATE_MOODS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        moods: [].concat(_toConsumableArray(state.moods), _toConsumableArray(action.payload))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dailyInfoReducer;","map":{"version":3,"sources":["C:/Users/DanielAlejandro/Documents/GitHub/codeworks_exercises/Senior/week-8-practice/RecoveryBox/client/redux/dailyInfoReducer.js"],"names":["initialState","meetings","feeling","moods","suggestions","dailyInfoReducer","state","action","type","payload","filter","elInList"],"mappings":";;;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CADS;AAEnBC,EAAAA,OAAO,EAAE,CAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,WAAW,EAAE;AAJM,CAArB;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,0BAAL;AACE,6CACKF,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,GAAgB;AAF5B;;AAIF,SAAK,0BAAL;AACE,6CACKK,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,GAAgB;AAF5B;;AAIF,SAAK,gBAAL;AACE,6CACKK,KADL;AAEEJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFlB;;AAIF,SAAK,mBAAL;AACE,6CACKH,KADL;AAEEF,QAAAA,WAAW,+BAAME,KAAK,CAACF,WAAZ,IAAyBG,MAAM,CAACE,OAAhC;AAFb;;AAIF,SAAK,wBAAL;AACA,6CACKH,KADL;AAEEF,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBM,MAAlB,CAAyB,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,KAAKJ,MAAM,CAACE,OAAxB;AAAA,SAAjC;AAFf;;AAIA,SAAK,cAAL;AACA,6CACKH,KADL;AAEEH,QAAAA,KAAK,+BAAMG,KAAK,CAACH,KAAZ,sBAAsBI,MAAM,CAACE,OAA7B;AAFP;;AAIA;AACE,aAAOH,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,gBAAf","sourcesContent":["const initialState = {\n  meetings: 0,\n  feeling: 0,\n  moods: [],\n  suggestions: [],\n}\n\nconst dailyInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT_DAILY_MEETINGS\":\n      return {\n        ...state,\n        meetings: state.meetings +1\n      }\n    case \"DECREMENT_DAILY_MEETINGS\":\n      return {\n        ...state,\n        meetings: state.meetings -1\n      }\n    case \"UPDATE_FEELING\":\n      return {\n        ...state,\n        feeling: action.payload\n      }\n    case \"ADDTO_SUGGESTIONS\":\n      return {\n        ...state,\n        suggestions: [...state.suggestions, action.payload]\n      }\n    case \"REMOVEFROM_SUGGESTIONS\":\n    return {\n      ...state,\n      suggestions: state.suggestions.filter(elInList => elInList !== action.payload)\n    }\n    case \"UPDATE_MOODS\":\n    return {\n      ...state,\n      moods: [...state.moods, ...action.payload]\n    }\n    default:\n      return state;\n   }\n}\n\nexport default dailyInfoReducer;"]},"metadata":{},"sourceType":"module"}