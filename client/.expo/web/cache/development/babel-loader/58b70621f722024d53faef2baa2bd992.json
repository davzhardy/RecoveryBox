{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/calendar/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as ReactNative from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport dateutils from \"../dateutils\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport styleConstructor from \"./style\";\nimport Day from \"./day/basic\";\nimport UnitDay from \"./day/period\";\nimport MultiDotDay from \"./day/multi-dot\";\nimport MultiPeriodDay from \"./day/multi-period\";\nimport SingleDay from \"./day/custom\";\nimport CalendarHeader from \"./header\";\nimport shouldComponentUpdate from \"./updater\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { SELECT_DATE_SLOT } from \"../testIDs\";\nvar View = ReactNative.View,\n    ViewPropTypes = ReactNative.ViewPropTypes;\nvar viewPropTypes = typeof document !== 'undefined' ? PropTypes.shape({\n  style: PropTypes.object\n}) : ViewPropTypes || View.propTypes;\nvar EmptyArray = [];\n\nvar Calendar = function (_Component) {\n  _inherits(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, props);\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.isDateNotInTheRange = function (minDate, maxDate, date) {\n      return minDate && !dateutils.isGTE(date, minDate) || maxDate && !dateutils.isLTE(date, maxDate);\n    };\n\n    _this.getAccessibilityLabel = function (state, day) {\n      var today = XDate.locales[XDate.defaultLocale].today;\n      var formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n      var isToday = state === 'today';\n\n      var markingLabel = _this.getDateMarking(day);\n\n      if (formatAccessibilityLabel) {\n        return (isToday ? today : '') + \" \" + day.toString(formatAccessibilityLabel) + \" \" + markingLabel;\n      }\n\n      return (isToday ? 'today' : '') + \" \" + day.toString('dddd d MMMM yyyy') + \" \" + markingLabel;\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var SWIPE_UP = swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      _this.header.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      _this.header.onPressLeft();\n    };\n\n    _this.style = styleConstructor(_this.props.theme);\n    _this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n    _this.updateMonth = _this.updateMonth.bind(_assertThisInitialized(_this));\n    _this.pressDay = _this.pressDay.bind(_assertThisInitialized(_this));\n    _this.longPressDay = _this.longPressDay.bind(_assertThisInitialized(_this));\n    _this.shouldComponentUpdate = shouldComponentUpdate;\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"updateMonth\",\n    value: function updateMonth(day, doNotTriggerListeners) {\n      var _this2 = this;\n\n      if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this2.state.currentMonth.clone();\n\n          if (_this2.props.onMonthChange) {\n            _this2.props.onMonthChange(xdateToData(currMont));\n          }\n\n          if (_this2.props.onVisibleMonthsChange) {\n            _this2.props.onVisibleMonthsChange([xdateToData(currMont)]);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_handleDayInteraction\",\n    value: function _handleDayInteraction(date, interaction) {\n      var day = parseDate(date);\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n\n      if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n        var shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction(xdateToData(day));\n        }\n      }\n    }\n  }, {\n    key: \"pressDay\",\n    value: function pressDay(date) {\n      this._handleDayInteraction(date, this.props.onDayPress);\n    }\n  }, {\n    key: \"longPressDay\",\n    value: function longPressDay(date) {\n      this._handleDayInteraction(date, this.props.onDayLongPress);\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var minDate = parseDate(this.props.minDate);\n      var maxDate = parseDate(this.props.maxDate);\n      var state = '';\n\n      if (this.props.disabledByDefault) {\n        state = 'disabled';\n      } else if (this.isDateNotInTheRange(minDate, maxDate, day)) {\n        state = 'disabled';\n      } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n        state = 'disabled';\n      } else if (dateutils.sameDate(day, XDate())) {\n        state = 'today';\n      }\n\n      if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n        return React.createElement(View, {\n          key: id,\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }\n        });\n      }\n\n      var DayComp = this.getDayComponent();\n      var date = day.getDate();\n      var dateAsObject = xdateToData(day);\n      var accessibilityLabel = this.getAccessibilityLabel(state, day);\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }, React.createElement(DayComp, {\n        testID: SELECT_DATE_SLOT + \"-\" + dateAsObject.dateString,\n        state: state,\n        theme: this.props.theme,\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        date: dateAsObject,\n        marking: this.getDateMarking(day),\n        accessibilityLabel: accessibilityLabel,\n        disableAllTouchEventsForDisabledDays: this.props.disableAllTouchEventsForDisabledDays,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      }, date));\n    }\n  }, {\n    key: \"getMarkingLabel\",\n    value: function getMarkingLabel(day) {\n      var label = '';\n      var marking = this.getDateMarking(day);\n\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n\n      if (marking.selected) {\n        label += 'selected ';\n\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n\n      return label;\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      if (this.props.dayComponent) {\n        return this.props.dayComponent;\n      }\n\n      switch (this.props.markingType) {\n        case 'period':\n          return UnitDay;\n\n        case 'multi-dot':\n          return MultiDotDay;\n\n        case 'multi-period':\n          return MultiPeriodDay;\n\n        case 'custom':\n          return SingleDay;\n\n        default:\n          return Day;\n      }\n    }\n  }, {\n    key: \"getDateMarking\",\n    value: function getDateMarking(day) {\n      if (!this.props.markedDates) {\n        return false;\n      }\n\n      var dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n      if (dates.length || dates) {\n        return dates;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"renderWeekNumber\",\n    value: function renderWeekNumber(weekNumber) {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: \"week-container-\" + weekNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 7\n        }\n      }, React.createElement(Day, {\n        key: \"week-\" + weekNumber,\n        theme: this.props.theme,\n        marking: {\n          disableTouchEvent: true\n        },\n        state: \"disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this3 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this3.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return React.createElement(View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }, week);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var currentMonth = this.state.currentMonth;\n      var _this$props = this.props,\n          firstDay = _this$props.firstDay,\n          showSixWeeks = _this$props.showSixWeeks,\n          hideExtraDays = _this$props.hideExtraDays,\n          enableSwipeMonths = _this$props.enableSwipeMonths;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n      var days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      var indicator;\n      var current = parseDate(this.props.current);\n\n      if (current) {\n        var lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n\n        if (this.props.displayLoadingIndicator && !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n      var gestureProps = enableSwipeMonths ? {\n        onSwipe: function onSwipe(direction, state) {\n          return _this4.onSwipe(direction, state);\n        }\n      } : {};\n      var headerProps = {\n        testID: this.props.testID,\n        ref: function ref(c) {\n          return _this4.header = c;\n        },\n        style: this.props.headerStyle,\n        theme: this.props.theme,\n        hideArrows: this.props.hideArrows,\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        showIndicator: indicator,\n        firstDay: this.props.firstDay,\n        showSixWeeks: this.props.showSixWeeks,\n        renderArrow: this.props.renderArrow,\n        monthFormat: this.props.monthFormat,\n        hideDayNames: this.props.hideDayNames,\n        weekNumbers: this.props.showWeekNumbers,\n        onPressArrowLeft: this.props.onPressArrowLeft,\n        onPressArrowRight: this.props.onPressArrowRight,\n        webAriaLevel: this.props.webAriaLevel,\n        disableArrowLeft: this.props.disableArrowLeft,\n        disableArrowRight: this.props.disableArrowRight,\n        disabledDaysIndexes: this.props.disabledDaysIndexes,\n        renderHeader: this.props.renderHeader\n      };\n      var CustomHeader = this.props.customHeader;\n      return React.createElement(GestureComponent, _extends({}, gestureProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: [this.style.container, this.props.style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 9\n        }\n      }, CustomHeader ? React.createElement(CustomHeader, _extends({}, headerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }\n      })) : React.createElement(CalendarHeader, _extends({}, headerProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, weeks)));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n  theme: PropTypes.object,\n  markedDates: PropTypes.object,\n  style: viewPropTypes.style,\n  current: PropTypes.any,\n  minDate: PropTypes.any,\n  maxDate: PropTypes.any,\n  firstDay: PropTypes.number,\n  markingType: PropTypes.string,\n  hideArrows: PropTypes.bool,\n  displayLoadingIndicator: PropTypes.bool,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  renderArrow: PropTypes.func,\n  dayComponent: PropTypes.any,\n  monthFormat: PropTypes.string,\n  disableMonthChange: PropTypes.bool,\n  hideDayNames: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func,\n  disableArrowLeft: PropTypes.bool,\n  disableArrowRight: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  webAriaLevel: PropTypes.number,\n  disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n  disableAllTouchEventsForDisabledDays: PropTypes.bool,\n  renderHeader: PropTypes.any,\n  customHeader: PropTypes.any,\n  enableSwipeMonths: PropTypes.bool\n};\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nexport default Calendar;","map":{"version":3,"sources":["/Users/raph/Programming/Codeworks 2020/Senior/Legacy/RecoveryBox/client/node_modules/react-native-calendars/src/calendar/index.js"],"names":["React","Component","ReactNative","PropTypes","XDate","dateutils","xdateToData","parseDate","styleConstructor","Day","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","CalendarHeader","shouldComponentUpdate","GestureRecognizer","swipeDirections","SELECT_DATE_SLOT","View","ViewPropTypes","viewPropTypes","document","shape","style","object","propTypes","EmptyArray","Calendar","props","addMonth","count","updateMonth","state","currentMonth","clone","addMonths","isDateNotInTheRange","minDate","maxDate","date","isGTE","isLTE","getAccessibilityLabel","day","today","locales","defaultLocale","formatAccessibilityLabel","isToday","markingLabel","getDateMarking","toString","onSwipe","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","header","onPressRight","onPressLeft","theme","current","bind","pressDay","longPressDay","doNotTriggerListeners","setState","currMont","onMonthChange","onVisibleMonthsChange","interaction","shouldUpdateMonth","disableMonthChange","undefined","_handleDayInteraction","onDayPress","onDayLongPress","id","disabledByDefault","sameMonth","sameDate","hideExtraDays","flex","DayComp","getDayComponent","getDate","dateAsObject","accessibilityLabel","alignItems","dateString","disableAllTouchEventsForDisabledDays","label","marking","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","dayComponent","markingType","markedDates","dates","length","weekNumber","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","renderWeekNumber","getWeek","firstDay","showSixWeeks","enableSwipeMonths","shouldShowSixWeeks","page","weeks","renderWeek","splice","indicator","lastMonthOfDay","setDate","addDays","displayLoadingIndicator","GestureComponent","gestureProps","direction","headerProps","testID","ref","c","headerStyle","hideArrows","month","showIndicator","renderArrow","monthFormat","hideDayNames","weekNumbers","onPressArrowLeft","onPressArrowRight","webAriaLevel","disableArrowLeft","disableArrowRight","disabledDaysIndexes","renderHeader","CustomHeader","customHeader","container","accessibilityElementsHidden","importantForAccessibility","monthView","displayName","any","number","string","bool","func","oneOfType","array","arrayOf","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;OACO,KAAKC,W;AACZ,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP;AACA,SAAQC,WAAR,EAAqBC,SAArB;AACA,OAAOC,gBAAP;AACA,OAAOC,GAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,OAAOC,qBAAP;AACA,OAAOC,iBAAP,IAA2BC,eAA3B,QAAiD,6BAAjD;AACA,SAAQC,gBAAR;IAGOC,I,GAAuBjB,W,CAAvBiB,I;IAAMC,a,GAAiBlB,W,CAAjBkB,a;AACb,IAAMC,aAAa,GACjB,OAAOC,QAAP,KAAoB,WAApB,GACInB,SAAS,CAACoB,KAAV,CAAgB;AAACC,EAAAA,KAAK,EAAErB,SAAS,CAACsB;AAAlB,CAAhB,CADJ,GAEIL,aAAa,IAAID,IAAI,CAACO,SAH5B;AAIA,IAAMC,UAAU,GAAG,EAAnB;;IAOMC,Q;;;;;AA8EJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAwDnBC,QAxDmB,GAwDR,UAACC,KAAD,EAAW;AACpB,YAAKC,WAAL,CAAiB,MAAKC,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,GAAgCC,SAAhC,CAA0CL,KAA1C,EAAiD,IAAjD,CAAjB;AACD,KA1DkB;;AAAA,UA4DnBM,mBA5DmB,GA4DG,UAACC,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,EAA4B;AAChD,aAAQF,OAAO,IAAI,CAACjC,SAAS,CAACoC,KAAV,CAAgBD,IAAhB,EAAsBF,OAAtB,CAAb,IAAiDC,OAAO,IAAI,CAAClC,SAAS,CAACqC,KAAV,CAAgBF,IAAhB,EAAsBD,OAAtB,CAApE;AACD,KA9DkB;;AAAA,UAgEnBI,qBAhEmB,GAgEK,UAACV,KAAD,EAAQW,GAAR,EAAgB;AACtC,UAAMC,KAAK,GAAGzC,KAAK,CAAC0C,OAAN,CAAc1C,KAAK,CAAC2C,aAApB,EAAmCF,KAAjD;AACA,UAAMG,wBAAwB,GAAG5C,KAAK,CAAC0C,OAAN,CAAc1C,KAAK,CAAC2C,aAApB,EAAmCC,wBAApE;AACA,UAAMC,OAAO,GAAGhB,KAAK,KAAK,OAA1B;;AACA,UAAMiB,YAAY,GAAG,MAAKC,cAAL,CAAoBP,GAApB,CAArB;;AAEA,UAAII,wBAAJ,EAA8B;AAC5B,gBAAUC,OAAO,GAAGJ,KAAH,GAAW,EAA5B,UAAkCD,GAAG,CAACQ,QAAJ,CAAaJ,wBAAb,CAAlC,SAA4EE,YAA5E;AACD;;AAED,cAAUD,OAAO,GAAG,OAAH,GAAa,EAA9B,UAAoCL,GAAG,CAACQ,QAAJ,CAAa,kBAAb,CAApC,SAAwEF,YAAxE;AACD,KA3EkB;;AAAA,UAqLnBG,OArLmB,GAqLT,UAACC,WAAD,EAAiB;AAAA,UAClBC,QADkB,GAC+BtC,eAD/B,CAClBsC,QADkB;AAAA,UACRC,UADQ,GAC+BvC,eAD/B,CACRuC,UADQ;AAAA,UACIC,UADJ,GAC+BxC,eAD/B,CACIwC,UADJ;AAAA,UACgBC,WADhB,GAC+BzC,eAD/B,CACgByC,WADhB;;AAGzB,cAAQJ,WAAR;AACA,aAAKC,QAAL;AACA,aAAKC,UAAL;AACE;;AACF,aAAKC,UAAL;AACE,gBAAKE,WAAL;;AACA;;AACF,aAAKD,WAAL;AACE,gBAAKE,YAAL;;AACA;AATF;AAWD,KAnMkB;;AAAA,UAqMnBD,WArMmB,GAqML,YAAM;AAClB,YAAKE,MAAL,CAAYC,YAAZ;AACD,KAvMkB;;AAAA,UAyMnBF,YAzMmB,GAyMJ,YAAM;AACnB,YAAKC,MAAL,CAAYE,WAAZ;AACD,KA3MkB;;AAGjB,UAAKvC,KAAL,GAAahB,gBAAgB,CAAC,MAAKqB,KAAL,CAAWmC,KAAZ,CAA7B;AACA,UAAK/B,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEL,KAAK,CAACoC,OAAN,GAAgB1D,SAAS,CAACsB,KAAK,CAACoC,OAAP,CAAzB,GAA2C7D,KAAK;AADnD,KAAb;AAIA,UAAK4B,WAAL,GAAmB,MAAKA,WAAL,CAAiBkC,IAAjB,+BAAnB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AACA,UAAKnD,qBAAL,GAA6BA,qBAA7B;AAXiB;AAYlB;;;;gCAEW6B,G,EAAKyB,qB,EAAuB;AAAA;;AACtC,UAAIzB,GAAG,CAACQ,QAAJ,CAAa,SAAb,MAA4B,KAAKnB,KAAL,CAAWC,YAAX,CAAwBkB,QAAxB,CAAiC,SAAjC,CAAhC,EAA6E;AAC3E;AACD;;AACD,WAAKkB,QAAL,CAAc;AACZpC,QAAAA,YAAY,EAAEU,GAAG,CAACT,KAAJ;AADF,OAAd,EAEG,YAAM;AACP,YAAI,CAACkC,qBAAL,EAA4B;AAC1B,cAAME,QAAQ,GAAG,MAAI,CAACtC,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,EAAjB;;AACA,cAAI,MAAI,CAACN,KAAL,CAAW2C,aAAf,EAA8B;AAC5B,YAAA,MAAI,CAAC3C,KAAL,CAAW2C,aAAX,CAAyBlE,WAAW,CAACiE,QAAD,CAApC;AACD;;AACD,cAAI,MAAI,CAAC1C,KAAL,CAAW4C,qBAAf,EAAsC;AACpC,YAAA,MAAI,CAAC5C,KAAL,CAAW4C,qBAAX,CAAiC,CAACnE,WAAW,CAACiE,QAAD,CAAZ,CAAjC;AACD;AACF;AACF,OAZD;AAaD;;;0CAEqB/B,I,EAAMkC,W,EAAa;AACvC,UAAM9B,GAAG,GAAGrC,SAAS,CAACiC,IAAD,CAArB;AACA,UAAMF,OAAO,GAAG/B,SAAS,CAAC,KAAKsB,KAAL,CAAWS,OAAZ,CAAzB;AACA,UAAMC,OAAO,GAAGhC,SAAS,CAAC,KAAKsB,KAAL,CAAWU,OAAZ,CAAzB;;AACA,UAAI,EAAED,OAAO,IAAI,CAACjC,SAAS,CAACoC,KAAV,CAAgBG,GAAhB,EAAqBN,OAArB,CAAd,KAAgD,EAAEC,OAAO,IAAI,CAAClC,SAAS,CAACqC,KAAV,CAAgBE,GAAhB,EAAqBL,OAArB,CAAd,CAApD,EAAkG;AAChG,YAAMoC,iBAAiB,GAAG,KAAK9C,KAAL,CAAW+C,kBAAX,KAAkCC,SAAlC,IAA+C,CAAC,KAAKhD,KAAL,CAAW+C,kBAArF;;AACA,YAAID,iBAAJ,EAAuB;AACrB,eAAK3C,WAAL,CAAiBY,GAAjB;AACD;;AACD,YAAI8B,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACpE,WAAW,CAACsC,GAAD,CAAZ,CAAX;AACD;AACF;AACF;;;6BAEQJ,I,EAAM;AACb,WAAKsC,qBAAL,CAA2BtC,IAA3B,EAAiC,KAAKX,KAAL,CAAWkD,UAA5C;AACD;;;iCAEYvC,I,EAAM;AACjB,WAAKsC,qBAAL,CAA2BtC,IAA3B,EAAiC,KAAKX,KAAL,CAAWmD,cAA5C;AACD;;;8BAwBSpC,G,EAAKqC,E,EAAI;AACjB,UAAM3C,OAAO,GAAG/B,SAAS,CAAC,KAAKsB,KAAL,CAAWS,OAAZ,CAAzB;AACA,UAAMC,OAAO,GAAGhC,SAAS,CAAC,KAAKsB,KAAL,CAAWU,OAAZ,CAAzB;AACA,UAAIN,KAAK,GAAG,EAAZ;;AACA,UAAI,KAAKJ,KAAL,CAAWqD,iBAAf,EAAkC;AAChCjD,QAAAA,KAAK,GAAG,UAAR;AACD,OAFD,MAEO,IAAI,KAAKI,mBAAL,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2CK,GAA3C,CAAJ,EAAqD;AAC1DX,QAAAA,KAAK,GAAG,UAAR;AACD,OAFM,MAEA,IAAI,CAAC5B,SAAS,CAAC8E,SAAV,CAAoBvC,GAApB,EAAyB,KAAKX,KAAL,CAAWC,YAApC,CAAL,EAAwD;AAC7DD,QAAAA,KAAK,GAAG,UAAR;AACD,OAFM,MAEA,IAAI5B,SAAS,CAAC+E,QAAV,CAAmBxC,GAAnB,EAAwBxC,KAAK,EAA7B,CAAJ,EAAsC;AAC3C6B,QAAAA,KAAK,GAAG,OAAR;AACD;;AAED,UAAI,CAAC5B,SAAS,CAAC8E,SAAV,CAAoBvC,GAApB,EAAyB,KAAKX,KAAL,CAAWC,YAApC,CAAD,IAAsD,KAAKL,KAAL,CAAWwD,aAArE,EAAoF;AAClF,eAAQ,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEJ,EAAX;AAAe,UAAA,KAAK,EAAE;AAACK,YAAAA,IAAI,EAAE;AAAP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;AAED,UAAMC,OAAO,GAAG,KAAKC,eAAL,EAAhB;AACA,UAAMhD,IAAI,GAAGI,GAAG,CAAC6C,OAAJ,EAAb;AACA,UAAMC,YAAY,GAAGpF,WAAW,CAACsC,GAAD,CAAhC;AACA,UAAM+C,kBAAkB,GAAG,KAAKhD,qBAAL,CAA2BV,KAA3B,EAAkCW,GAAlC,CAA3B;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC0C,UAAAA,IAAI,EAAE,CAAP;AAAUM,UAAAA,UAAU,EAAE;AAAtB,SAAb;AAA8C,QAAA,GAAG,EAAEX,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,MAAM,EAAK/D,gBAAL,SAAyBwE,YAAY,CAACG,UAD9C;AAEE,QAAA,KAAK,EAAE5D,KAFT;AAGE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWmC,KAHpB;AAIE,QAAA,OAAO,EAAE,KAAKG,QAJhB;AAKE,QAAA,WAAW,EAAE,KAAKC,YALpB;AAME,QAAA,IAAI,EAAEsB,YANR;AAOE,QAAA,OAAO,EAAE,KAAKvC,cAAL,CAAoBP,GAApB,CAPX;AAQE,QAAA,kBAAkB,EAAE+C,kBARtB;AASE,QAAA,oCAAoC,EAAE,KAAK9D,KAAL,CAAWiE,oCATnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWGtD,IAXH,CADF,CADF;AAiBD;;;oCAEeI,G,EAAK;AACnB,UAAImD,KAAK,GAAG,EAAZ;AACA,UAAMC,OAAO,GAAG,KAAK7C,cAAL,CAAoBP,GAApB,CAAhB;;AAEA,UAAIoD,OAAO,CAACL,kBAAZ,EAAgC;AAC9B,eAAOK,OAAO,CAACL,kBAAf;AACD;;AAED,UAAIK,OAAO,CAACC,QAAZ,EAAsB;AACpBF,QAAAA,KAAK,IAAI,WAAT;;AACA,YAAI,CAACC,OAAO,CAACE,MAAb,EAAqB;AACnBH,UAAAA,KAAK,IAAI,mCAAT;AACD;AACF;;AACD,UAAIC,OAAO,CAACE,MAAZ,EAAoB;AAClBH,QAAAA,KAAK,IAAI,gCAAT;AACD;;AACD,UAAIC,OAAO,CAACG,WAAZ,EAAyB;AACvBJ,QAAAA,KAAK,IAAI,eAAT;AACD;;AACD,UAAIC,OAAO,CAACI,SAAZ,EAAuB;AACrBL,QAAAA,KAAK,IAAI,aAAT;AACD;;AACD,UAAIC,OAAO,CAACK,QAAR,IAAoBL,OAAO,CAACM,iBAAhC,EAAmD;AACjDP,QAAAA,KAAK,IAAI,WAAT;AACD;;AACD,aAAOA,KAAP;AACD;;;sCAEiB;AAChB,UAAI,KAAKlE,KAAL,CAAW0E,YAAf,EAA6B;AAC3B,eAAO,KAAK1E,KAAL,CAAW0E,YAAlB;AACD;;AAED,cAAQ,KAAK1E,KAAL,CAAW2E,WAAnB;AACA,aAAK,QAAL;AACE,iBAAO9F,OAAP;;AACF,aAAK,WAAL;AACE,iBAAOC,WAAP;;AACF,aAAK,cAAL;AACE,iBAAOC,cAAP;;AACF,aAAK,QAAL;AACE,iBAAOC,SAAP;;AACF;AACE,iBAAOJ,GAAP;AAVF;AAYD;;;mCAEcmC,G,EAAK;AAClB,UAAI,CAAC,KAAKf,KAAL,CAAW4E,WAAhB,EAA6B;AAC3B,eAAO,KAAP;AACD;;AAED,UAAMC,KAAK,GAAG,KAAK7E,KAAL,CAAW4E,WAAX,CAAuB7D,GAAG,CAACQ,QAAJ,CAAa,YAAb,CAAvB,KAAsDzB,UAApE;;AACA,UAAI+E,KAAK,CAACC,MAAN,IAAgBD,KAApB,EAA2B;AACzB,eAAOA,KAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;;;qCA0BgBE,U,EAAY;AAC3B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACtB,UAAAA,IAAI,EAAE,CAAP;AAAUM,UAAAA,UAAU,EAAE;AAAtB,SAAb;AAA8C,QAAA,GAAG,sBAAoBgB,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,GAAG,YAAUA,UADf;AAEE,QAAA,KAAK,EAAE,KAAK/E,KAAL,CAAWmC,KAFpB;AAGE,QAAA,OAAO,EAAE;AAACsC,UAAAA,iBAAiB,EAAE;AAApB,SAHX;AAIE,QAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGM,UANH,CADF,CADF;AAYD;;;+BAEUC,I,EAAM5B,E,EAAI;AAAA;;AACnB,UAAM6B,IAAI,GAAG,EAAb;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACnE,GAAD,EAAMoE,GAAN,EAAc;AACzBF,QAAAA,IAAI,CAACG,IAAL,CAAU,MAAI,CAACC,SAAL,CAAetE,GAAf,EAAoBoE,GAApB,CAAV;AACD,OAFD,EAEG,IAFH;;AAIA,UAAI,KAAKnF,KAAL,CAAWsF,eAAf,EAAgC;AAC9BL,QAAAA,IAAI,CAACM,OAAL,CAAa,KAAKC,gBAAL,CAAsBR,IAAI,CAACA,IAAI,CAACF,MAAL,GAAc,CAAf,CAAJ,CAAsBW,OAAtB,EAAtB,CAAb;AACD;;AAED,aAAQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAK9F,KAAL,CAAWsF,IAAxB;AAA8B,QAAA,GAAG,EAAE7B,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC6B,IAAxC,CAAR;AACD;;;6BAEQ;AAAA;;AAAA,UACA5E,YADA,GACgB,KAAKD,KADrB,CACAC,YADA;AAAA,wBAE4D,KAAKL,KAFjE;AAAA,UAEA0F,QAFA,eAEAA,QAFA;AAAA,UAEUC,YAFV,eAEUA,YAFV;AAAA,UAEwBnC,aAFxB,eAEwBA,aAFxB;AAAA,UAEuCoC,iBAFvC,eAEuCA,iBAFvC;AAGP,UAAMC,kBAAkB,GAAGF,YAAY,IAAI,CAACnC,aAA5C;AACA,UAAMwB,IAAI,GAAGxG,SAAS,CAACsH,IAAV,CAAezF,YAAf,EAA6BqF,QAA7B,EAAuCG,kBAAvC,CAAb;AAEA,UAAME,KAAK,GAAG,EAAd;;AACA,aAAOf,IAAI,CAACF,MAAZ,EAAoB;AAClBiB,QAAAA,KAAK,CAACX,IAAN,CAAW,KAAKY,UAAL,CAAgBhB,IAAI,CAACiB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAhB,EAAmCF,KAAK,CAACjB,MAAzC,CAAX;AACD;;AAED,UAAIoB,SAAJ;AACA,UAAM9D,OAAO,GAAG1D,SAAS,CAAC,KAAKsB,KAAL,CAAWoC,OAAZ,CAAzB;;AACA,UAAIA,OAAJ,EAAa;AACX,YAAM+D,cAAc,GAAG/D,OAAO,CAAC9B,KAAR,GAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,IAA7B,EAAmC6F,OAAnC,CAA2C,CAA3C,EAA8CC,OAA9C,CAAsD,CAAC,CAAvD,EAA0D9E,QAA1D,CAAmE,YAAnE,CAAvB;;AACA,YAAI,KAAKvB,KAAL,CAAWsG,uBAAX,IACF,EAAE,KAAKtG,KAAL,CAAW4E,WAAX,IAA0B,KAAK5E,KAAL,CAAW4E,WAAX,CAAuBuB,cAAvB,CAA5B,CADF,EACuE;AACrED,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF;;AAED,UAAMK,gBAAgB,GAAGX,iBAAiB,GAAGzG,iBAAH,GAAuBG,IAAjE;AACA,UAAMkH,YAAY,GAAGZ,iBAAiB,GAAG;AAACpE,QAAAA,OAAO,EAAE,iBAACiF,SAAD,EAAYrG,KAAZ;AAAA,iBAAsB,MAAI,CAACoB,OAAL,CAAaiF,SAAb,EAAwBrG,KAAxB,CAAtB;AAAA;AAAV,OAAH,GAAqE,EAA3G;AAEA,UAAMsG,WAAW,GAAG;AAClBC,QAAAA,MAAM,EAAE,KAAK3G,KAAL,CAAW2G,MADD;AAElBC,QAAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,iBAAI,MAAI,CAAC7E,MAAL,GAAc6E,CAAlB;AAAA,SAFY;AAGlBlH,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAW8G,WAHA;AAIlB3E,QAAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWmC,KAJA;AAKlB4E,QAAAA,UAAU,EAAE,KAAK/G,KAAL,CAAW+G,UALL;AAMlBC,QAAAA,KAAK,EAAE,KAAK5G,KAAL,CAAWC,YANA;AAOlBJ,QAAAA,QAAQ,EAAE,KAAKA,QAPG;AAQlBgH,QAAAA,aAAa,EAAEf,SARG;AASlBR,QAAAA,QAAQ,EAAE,KAAK1F,KAAL,CAAW0F,QATH;AAUlBC,QAAAA,YAAY,EAAE,KAAK3F,KAAL,CAAW2F,YAVP;AAWlBuB,QAAAA,WAAW,EAAE,KAAKlH,KAAL,CAAWkH,WAXN;AAYlBC,QAAAA,WAAW,EAAE,KAAKnH,KAAL,CAAWmH,WAZN;AAalBC,QAAAA,YAAY,EAAE,KAAKpH,KAAL,CAAWoH,YAbP;AAclBC,QAAAA,WAAW,EAAE,KAAKrH,KAAL,CAAWsF,eAdN;AAelBgC,QAAAA,gBAAgB,EAAE,KAAKtH,KAAL,CAAWsH,gBAfX;AAgBlBC,QAAAA,iBAAiB,EAAE,KAAKvH,KAAL,CAAWuH,iBAhBZ;AAiBlBC,QAAAA,YAAY,EAAE,KAAKxH,KAAL,CAAWwH,YAjBP;AAkBlBC,QAAAA,gBAAgB,EAAE,KAAKzH,KAAL,CAAWyH,gBAlBX;AAmBlBC,QAAAA,iBAAiB,EAAE,KAAK1H,KAAL,CAAW0H,iBAnBZ;AAoBlBC,QAAAA,mBAAmB,EAAE,KAAK3H,KAAL,CAAW2H,mBApBd;AAqBlBC,QAAAA,YAAY,EAAE,KAAK5H,KAAL,CAAW4H;AArBP,OAApB;AAuBA,UAAMC,YAAY,GAAG,KAAK7H,KAAL,CAAW8H,YAAhC;AACA,aACE,oBAAC,gBAAD,eAAsBtB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CAAC,KAAK7G,KAAL,CAAWoI,SAAZ,EAAuB,KAAK/H,KAAL,CAAWL,KAAlC,CADT;AAEE,QAAA,2BAA2B,EAAE,KAAKK,KAAL,CAAWgI,2BAF1C;AAGE,QAAA,yBAAyB,EAAE,KAAKhI,KAAL,CAAWiI,yBAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKIJ,YAAY,GACV,oBAAC,YAAD,eAAkBnB,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADU,GAEV,oBAAC,cAAD,eAAoBA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPN,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAK/G,KAAL,CAAWuI,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCnC,KAApC,CATF,CADF,CADF;AAeD;;;;EAtXoB3H,S;;AAAjB2B,Q,CACGoI,W,GAAc,U;AADjBpI,Q,CAGGF,S,GAAY;AAEjBsC,EAAAA,KAAK,EAAE7D,SAAS,CAACsB,MAFA;AAIjBgF,EAAAA,WAAW,EAAEtG,SAAS,CAACsB,MAJN;AAMjBD,EAAAA,KAAK,EAAEH,aAAa,CAACG,KANJ;AAQjByC,EAAAA,OAAO,EAAE9D,SAAS,CAAC8J,GARF;AAUjB3H,EAAAA,OAAO,EAAEnC,SAAS,CAAC8J,GAVF;AAYjB1H,EAAAA,OAAO,EAAEpC,SAAS,CAAC8J,GAZF;AAcjB1C,EAAAA,QAAQ,EAAEpH,SAAS,CAAC+J,MAdH;AAgBjB1D,EAAAA,WAAW,EAAErG,SAAS,CAACgK,MAhBN;AAkBjBvB,EAAAA,UAAU,EAAEzI,SAAS,CAACiK,IAlBL;AAoBjBjC,EAAAA,uBAAuB,EAAEhI,SAAS,CAACiK,IApBlB;AAsBjB/E,EAAAA,aAAa,EAAElF,SAAS,CAACiK,IAtBR;AAwBjB5C,EAAAA,YAAY,EAAErH,SAAS,CAACiK,IAxBP;AA0BjBrF,EAAAA,UAAU,EAAE5E,SAAS,CAACkK,IA1BL;AA4BjBrF,EAAAA,cAAc,EAAE7E,SAAS,CAACkK,IA5BT;AA8BjB7F,EAAAA,aAAa,EAAErE,SAAS,CAACkK,IA9BR;AAgCjB5F,EAAAA,qBAAqB,EAAEtE,SAAS,CAACkK,IAhChB;AAkCjBtB,EAAAA,WAAW,EAAE5I,SAAS,CAACkK,IAlCN;AAoCjB9D,EAAAA,YAAY,EAAEpG,SAAS,CAAC8J,GApCP;AAsCjBjB,EAAAA,WAAW,EAAE7I,SAAS,CAACgK,MAtCN;AAwCjBvF,EAAAA,kBAAkB,EAAEzE,SAAS,CAACiK,IAxCb;AA0CjBnB,EAAAA,YAAY,EAAE9I,SAAS,CAACiK,IA1CP;AA4CjBlF,EAAAA,iBAAiB,EAAE/E,SAAS,CAACiK,IA5CZ;AA8CjBjD,EAAAA,eAAe,EAAEhH,SAAS,CAACiK,IA9CV;AAgDjBjB,EAAAA,gBAAgB,EAAEhJ,SAAS,CAACkK,IAhDX;AAkDjBjB,EAAAA,iBAAiB,EAAEjJ,SAAS,CAACkK,IAlDZ;AAoDjBf,EAAAA,gBAAgB,EAAEnJ,SAAS,CAACiK,IApDX;AAsDjBb,EAAAA,iBAAiB,EAAEpJ,SAAS,CAACiK,IAtDZ;AAwDjBzB,EAAAA,WAAW,EAAExI,SAAS,CAACmK,SAAV,CAAoB,CAACnK,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAAC+J,MAA7B,EAAqC/J,SAAS,CAACoK,KAA/C,CAApB,CAxDI;AA0DjBlB,EAAAA,YAAY,EAAElJ,SAAS,CAAC+J,MA1DP;AA4DjBV,EAAAA,mBAAmB,EAAErJ,SAAS,CAACqK,OAAV,CAAkBrK,SAAS,CAAC+J,MAA5B,CA5DJ;AA8DjBpE,EAAAA,oCAAoC,EAAE3F,SAAS,CAACiK,IA9D/B;AAgEjBX,EAAAA,YAAY,EAAEtJ,SAAS,CAAC8J,GAhEP;AAkEjBN,EAAAA,YAAY,EAAExJ,SAAS,CAAC8J,GAlEP;AAoEjBxC,EAAAA,iBAAiB,EAAEtH,SAAS,CAACiK;AApEZ,C;AAHfxI,Q,CA0EG6I,Y,GAAe;AACpBhD,EAAAA,iBAAiB,EAAE;AADC,C;AA+SxB,eAAe7F,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as ReactNative from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate} from '../interface';\nimport styleConstructor from './style';\nimport Day from './day/basic';\nimport UnitDay from './day/period';\nimport MultiDotDay from './day/multi-dot';\nimport MultiPeriodDay from './day/multi-period';\nimport SingleDay from './day/custom';\nimport CalendarHeader from './header';\nimport shouldComponentUpdate from './updater';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport {SELECT_DATE_SLOT} from '../testIDs';\n\n//Fallback for react-native-web or when RN version is < 0.44\nconst {View, ViewPropTypes} = ReactNative;\nconst viewPropTypes =\n  typeof document !== 'undefined'\n    ? PropTypes.shape({style: PropTypes.object})\n    : ViewPropTypes || View.propTypes;\nconst EmptyArray = [];\n\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n  static displayName = 'Calendar';\n\n  static propTypes = {\n    /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n    theme: PropTypes.object,\n    /** Collection of dates that have to be marked. Default = {} */\n    markedDates: PropTypes.object,\n    /** Specify style for calendar container element. Default = {} */\n    style: viewPropTypes.style,\n    /** Initially visible month. Default = Date() */\n    current: PropTypes.any,\n    /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n    minDate: PropTypes.any,\n    /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n    maxDate: PropTypes.any,\n    /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n    firstDay: PropTypes.number,\n    /** Date marking style [simple/period/multi-dot/multi-period]. Default = 'simple' */\n    markingType: PropTypes.string,\n    /** Hide month navigation arrows. Default = false */\n    hideArrows: PropTypes.bool,\n    /** Display loading indicator. Default = false */\n    displayLoadingIndicator: PropTypes.bool,\n    /** Do not show days of other months in month page. Default = false */\n    hideExtraDays: PropTypes.bool,\n    /** Always show six weeks on each month. Default = false */\n    showSixWeeks: PropTypes.bool,\n    /** Handler which gets executed on day press. Default = undefined */\n    onDayPress: PropTypes.func,\n    /** Handler which gets executed on day long press. Default = undefined */\n    onDayLongPress: PropTypes.func,\n    /** Handler which gets executed when month changes in calendar. Default = undefined */\n    onMonthChange: PropTypes.func,\n    /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n    onVisibleMonthsChange: PropTypes.func,\n    /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n    renderArrow: PropTypes.func,\n    /** Provide custom day rendering component */\n    dayComponent: PropTypes.any,\n    /** Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    monthFormat: PropTypes.string,\n    /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n    disableMonthChange: PropTypes.bool,\n    /**  Hide day names. Default = false */\n    hideDayNames: PropTypes.bool,\n    /** Disable days by default. Default = false */\n    disabledByDefault: PropTypes.bool,\n    /** Show week numbers. Default = false */\n    showWeekNumbers: PropTypes.bool,\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n    onPressArrowLeft: PropTypes.func,\n    /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n    onPressArrowRight: PropTypes.func,\n    /** Disable left arrow. Default = false */\n    disableArrowLeft: PropTypes.bool,\n    /** Disable right arrow. Default = false */\n    disableArrowRight: PropTypes.bool,\n    /** Style passed to the header */\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n    webAriaLevel: PropTypes.number,\n    /** Apply custom disable color to selected day indexes */\n    disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n    /** Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates*/\n    disableAllTouchEventsForDisabledDays: PropTypes.bool,\n    /** Replace default month and year title with custom one. the function receive a date as parameter. */\n    renderHeader: PropTypes.any,\n    /** Allow rendering of a totally custom header */\n    customHeader: PropTypes.any,\n    /** Enable the option to swipe between months. Default: false */\n    enableSwipeMonths: PropTypes.bool\n  };\n\n  static defaultProps = {\n    enableSwipeMonths: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(this.props.theme);\n    this.state = {\n      currentMonth: props.current ? parseDate(props.current) : XDate()\n    };\n\n    this.updateMonth = this.updateMonth.bind(this);\n    this.pressDay = this.pressDay.bind(this);\n    this.longPressDay = this.longPressDay.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate;\n  }\n\n  updateMonth(day, doNotTriggerListeners) {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n    this.setState({\n      currentMonth: day.clone()\n    }, () => {\n      if (!doNotTriggerListeners) {\n        const currMont = this.state.currentMonth.clone();\n        if (this.props.onMonthChange) {\n          this.props.onMonthChange(xdateToData(currMont));\n        }\n        if (this.props.onVisibleMonthsChange) {\n          this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n        }\n      }\n    });\n  }\n\n  _handleDayInteraction(date, interaction) {\n    const day = parseDate(date);\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    if (!(minDate && !dateutils.isGTE(day, minDate)) && !(maxDate && !dateutils.isLTE(day, maxDate))) {\n      const shouldUpdateMonth = this.props.disableMonthChange === undefined || !this.props.disableMonthChange;\n      if (shouldUpdateMonth) {\n        this.updateMonth(day);\n      }\n      if (interaction) {\n        interaction(xdateToData(day));\n      }\n    }\n  }\n\n  pressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayPress);\n  }\n\n  longPressDay(date) {\n    this._handleDayInteraction(date, this.props.onDayLongPress);\n  }\n\n  addMonth = (count) => {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  }\n\n  isDateNotInTheRange = (minDate, maxDate, date) => {\n    return (minDate && !dateutils.isGTE(date, minDate)) || (maxDate && !dateutils.isLTE(date, maxDate));\n  }\n\n  getAccessibilityLabel = (state, day) => {\n    const today = XDate.locales[XDate.defaultLocale].today;\n    const formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n    const isToday = state === 'today';\n    const markingLabel = this.getDateMarking(day);\n\n    if (formatAccessibilityLabel) {\n      return `${isToday ? today : ''} ${day.toString(formatAccessibilityLabel)} ${markingLabel}`;\n    }\n\n    return `${isToday ? 'today' : ''} ${day.toString('dddd d MMMM yyyy')} ${markingLabel}`;\n  }\n\n\n  renderDay(day, id) {\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n    let state = '';\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if (this.isDateNotInTheRange(minDate, maxDate, day)) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, this.state.currentMonth)) {\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    if (!dateutils.sameMonth(day, this.state.currentMonth) && this.props.hideExtraDays) {\n      return (<View key={id} style={{flex: 1}}/>);\n    }\n\n    const DayComp = this.getDayComponent();\n    const date = day.getDate();\n    const dateAsObject = xdateToData(day);\n    const accessibilityLabel = this.getAccessibilityLabel(state, day);\n\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\n        <DayComp\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\n          state={state}\n          theme={this.props.theme}\n          onPress={this.pressDay}\n          onLongPress={this.longPressDay}\n          date={dateAsObject}\n          marking={this.getDateMarking(day)}\n          accessibilityLabel={accessibilityLabel}\n          disableAllTouchEventsForDisabledDays={this.props.disableAllTouchEventsForDisabledDays}\n        >\n          {date}\n        </DayComp>\n      </View>\n    );\n  }\n\n  getMarkingLabel(day) {\n    let label = '';\n    const marking = this.getDateMarking(day);\n\n    if (marking.accessibilityLabel) {\n      return marking.accessibilityLabel;\n    }\n\n    if (marking.selected) {\n      label += 'selected ';\n      if (!marking.marked) {\n        label += 'You have no entries for this day ';\n      }\n    }\n    if (marking.marked) {\n      label += 'You have entries for this day ';\n    }\n    if (marking.startingDay) {\n      label += 'period start ';\n    }\n    if (marking.endingDay) {\n      label += 'period end ';\n    }\n    if (marking.disabled || marking.disableTouchEvent) {\n      label += 'disabled ';\n    }\n    return label;\n  }\n\n  getDayComponent() {\n    if (this.props.dayComponent) {\n      return this.props.dayComponent;\n    }\n\n    switch (this.props.markingType) {\n    case 'period':\n      return UnitDay;\n    case 'multi-dot':\n      return MultiDotDay;\n    case 'multi-period':\n      return MultiPeriodDay;\n    case 'custom':\n      return SingleDay;\n    default:\n      return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    if (!this.props.markedDates) {\n      return false;\n    }\n\n    const dates = this.props.markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  onSwipe = (gestureName) => {\n    const {SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT} = swipeDirections;\n\n    switch (gestureName) {\n    case SWIPE_UP:\n    case SWIPE_DOWN:\n      break;\n    case SWIPE_LEFT:\n      this.onSwipeLeft();\n      break;\n    case SWIPE_RIGHT:\n      this.onSwipeRight();\n      break;\n    }\n  }\n\n  onSwipeLeft = () => {\n    this.header.onPressRight();\n  }\n\n  onSwipeRight = () => {\n    this.header.onPressLeft();\n  }\n\n  renderWeekNumber(weekNumber) {\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={`week-container-${weekNumber}`}>\n        <Day\n          key={`week-${weekNumber}`}\n          theme={this.props.theme}\n          marking={{disableTouchEvent: true}}\n          state='disabled'\n        >\n          {weekNumber}\n        </Day>\n      </View>\n    );\n  }\n\n  renderWeek(days, id) {\n    const week = [];\n    days.forEach((day, id2) => {\n      week.push(this.renderDay(day, id2));\n    }, this);\n\n    if (this.props.showWeekNumbers) {\n      week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return (<View style={this.style.week} key={id}>{week}</View>);\n  }\n\n  render() {\n    const {currentMonth} = this.state;\n    const {firstDay, showSixWeeks, hideExtraDays, enableSwipeMonths} = this.props;\n    const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    const days = dateutils.page(currentMonth, firstDay, shouldShowSixWeeks);\n\n    const weeks = [];\n    while (days.length) {\n      weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    let indicator;\n    const current = parseDate(this.props.current);\n    if (current) {\n      const lastMonthOfDay = current.clone().addMonths(1, true).setDate(1).addDays(-1).toString('yyyy-MM-dd');\n      if (this.props.displayLoadingIndicator &&\n        !(this.props.markedDates && this.props.markedDates[lastMonthOfDay])) {\n        indicator = true;\n      }\n    }\n\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const gestureProps = enableSwipeMonths ? {onSwipe: (direction, state) => this.onSwipe(direction, state)} : {};\n\n    const headerProps = {\n      testID: this.props.testID,\n      ref: c => this.header = c,\n      style: this.props.headerStyle,\n      theme: this.props.theme,\n      hideArrows: this.props.hideArrows,\n      month: this.state.currentMonth,\n      addMonth: this.addMonth,\n      showIndicator: indicator,\n      firstDay: this.props.firstDay,\n      showSixWeeks: this.props.showSixWeeks,\n      renderArrow: this.props.renderArrow,\n      monthFormat: this.props.monthFormat,\n      hideDayNames: this.props.hideDayNames,\n      weekNumbers: this.props.showWeekNumbers,\n      onPressArrowLeft: this.props.onPressArrowLeft,\n      onPressArrowRight: this.props.onPressArrowRight,\n      webAriaLevel: this.props.webAriaLevel,\n      disableArrowLeft: this.props.disableArrowLeft,\n      disableArrowRight: this.props.disableArrowRight,\n      disabledDaysIndexes: this.props.disabledDaysIndexes,\n      renderHeader: this.props.renderHeader\n    };\n    const CustomHeader = this.props.customHeader;\n    return (\n      <GestureComponent {...gestureProps}>\n        <View\n          style={[this.style.container, this.props.style]}\n          accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n          importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          { CustomHeader\n            ? <CustomHeader {...headerProps}/>\n            : <CalendarHeader {...headerProps}/>\n          }\n          <View style={this.style.monthView}>{weeks}</View>\n        </View>\n      </GestureComponent>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}