{"version":3,"file":"UserInterfaceStyle.js","sourceRoot":"","sources":["../../src/ios/UserInterfaceStyle.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAGA,SAAgB,qBAAqB,CAAC,MAAkB;;IACtD,yBAAO,MAAM,CAAC,GAAG,0CAAE,kBAAkB,mCAAI,MAAM,CAAC,kBAAkB,mCAAI,IAAI,CAAC;AAC7E,CAAC;AAFD,sDAEC;AAED,SAAgB,qBAAqB,CACnC,MAAkB,EAClB,EAAiD;QAAjD,EAAE,oBAAoB,OAA2B,EAAzB,gDAAY;IAEpC,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC;IACzD,MAAM,KAAK,GAAG,iCAAiC,CAAC,kBAAkB,CAAC,CAAC;IAEpE,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,SAAS,CAAC;KAClB;IAED,uCACK,SAAS,KACZ,oBAAoB,EAAE,KAAK,IAC3B;AACJ,CAAC;AAfD,sDAeC;AAED,SAAS,iCAAiC,CAAC,kBAAiC;IAC1E,QAAQ,kBAAkB,EAAE;QAC1B,KAAK,OAAO;YACV,OAAO,OAAO,CAAC;QACjB,KAAK,MAAM;YACT,OAAO,MAAM,CAAC;QAChB,KAAK,WAAW;YACd,OAAO,WAAW,CAAC;KACtB;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { InfoPlist } from './IosConfig.types';\n\nexport function getUserInterfaceStyle(config: ExpoConfig): string | null {\n  return config.ios?.userInterfaceStyle ?? config.userInterfaceStyle ?? null;\n}\n\nexport function setUserInterfaceStyle(\n  config: ExpoConfig,\n  { UIUserInterfaceStyle, ...infoPlist }: InfoPlist\n) {\n  const userInterfaceStyle = getUserInterfaceStyle(config);\n  const style = mapUserInterfaceStyleForInfoPlist(userInterfaceStyle);\n\n  if (!style) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    UIUserInterfaceStyle: style,\n  };\n}\n\nfunction mapUserInterfaceStyleForInfoPlist(userInterfaceStyle: string | null): string | null {\n  switch (userInterfaceStyle) {\n    case 'light':\n      return 'Light';\n    case 'dark':\n      return 'Dark';\n    case 'automatic':\n      return 'Automatic';\n  }\n\n  return null;\n}\n"]}