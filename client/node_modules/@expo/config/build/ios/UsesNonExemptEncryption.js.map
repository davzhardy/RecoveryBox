{"version":3,"file":"UsesNonExemptEncryption.js","sourceRoot":"","sources":["../../src/ios/UsesNonExemptEncryption.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAGA,SAAgB,0BAA0B,CAAC,MAAkB;;IAC3D,yBAAO,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,0CAAE,MAAM,0CAAE,uBAAuB,mCAAI,IAAI,CAAC;AAC9D,CAAC;AAFD,gEAEC;AAED,SAAgB,0BAA0B,CACxC,MAAkB,EAClB,EAA0D;QAA1D,EAAE,6BAA6B,OAA2B,EAAzB,yDAAY;IAE7C,MAAM,uBAAuB,GAAG,0BAA0B,CAAC,MAAM,CAAC,CAAC;IAEnE,2CAA2C;IAC3C,IAAI,uBAAuB,KAAK,IAAI,EAAE;QACpC,OAAO,SAAS,CAAC;KAClB;IAED,uCACK,SAAS,KACZ,6BAA6B,EAAE,uBAAuB,IACtD;AACJ,CAAC;AAfD,gEAeC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { InfoPlist } from './IosConfig.types';\n\nexport function getUsesNonExemptEncryption(config: ExpoConfig) {\n  return config?.ios?.config?.usesNonExemptEncryption ?? null;\n}\n\nexport function setUsesNonExemptEncryption(\n  config: ExpoConfig,\n  { ITSAppUsesNonExemptEncryption, ...infoPlist }: InfoPlist\n) {\n  const usesNonExemptEncryption = getUsesNonExemptEncryption(config);\n\n  // Make no changes if the key is left blank\n  if (usesNonExemptEncryption === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    ITSAppUsesNonExemptEncryption: usesNonExemptEncryption,\n  };\n}\n"]}