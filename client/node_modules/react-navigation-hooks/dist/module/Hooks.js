import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _defineProperty from"@babel/runtime/helpers/defineProperty";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){keys.push.apply(keys,Object.getOwnPropertySymbols(object));}if(enumerableOnly)keys=keys.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{useState,useContext,useEffect,useLayoutEffect,useRef,useCallback}from'react';import{NavigationContext}from'react-navigation';export function useNavigation(){var navigation=useContext(NavigationContext);if(!navigation){throw new Error("react-navigation hooks require a navigation context but it couldn't be found. "+"Make sure you didn't forget to create and render the react-navigation app container. "+'If you need to access an optional navigation object, you can useContext(NavigationContext), which may return');}return navigation;}export function useNavigationParam(paramName){return useNavigation().getParam(paramName);}export function useNavigationState(){return useNavigation().state;}export function useNavigationKey(){return useNavigation().state.key;}var useGetter=function useGetter(value){var ref=useRef(value);useLayoutEffect(function(){ref.current=value;});return useCallback(function(){return ref.current;},[ref]);};export function useNavigationEvents(callback){var navigation=useNavigation();var getLatestCallback=useGetter(callback);useLayoutEffect(function(){var subscribedCallback=function subscribedCallback(event){var latestCallback=getLatestCallback();latestCallback(event);};var subs=[navigation.addListener('action',subscribedCallback),navigation.addListener('willFocus',subscribedCallback),navigation.addListener('didFocus',subscribedCallback),navigation.addListener('willBlur',subscribedCallback),navigation.addListener('didBlur',subscribedCallback)];return function(){subs.forEach(function(sub){return sub.remove();});};},[navigation.state.key]);}var emptyFocusState={isFocused:false,isBlurring:false,isBlurred:false,isFocusing:false};var didFocusState=_objectSpread({},emptyFocusState,{isFocused:true});var willBlurState=_objectSpread({},emptyFocusState,{isBlurring:true});var didBlurState=_objectSpread({},emptyFocusState,{isBlurred:true});var willFocusState=_objectSpread({},emptyFocusState,{isFocusing:true});function nextFocusState(eventName,currentState){switch(eventName){case'willFocus':return _objectSpread({},willFocusState,{isFocused:currentState.isFocused});case'didFocus':return didFocusState;case'willBlur':return willBlurState;case'didBlur':return didBlurState;default:return currentState;}}export function useFocusState(){var navigation=useNavigation();var _useState=useState(function(){return navigation.isFocused()?didFocusState:didBlurState;}),_useState2=_slicedToArray(_useState,2),focusState=_useState2[0],setFocusState=_useState2[1];useNavigationEvents(function(e){setFocusState(function(currentFocusState){return nextFocusState(e.type,currentFocusState);});});return focusState;}export var useFocusEffect=function useFocusEffect(callback){var navigation=useNavigation();useEffect(function(){var isFocused=false;var cleanup;if(navigation.isFocused()){cleanup=callback();isFocused=true;}var focusSubscription=navigation.addListener('willFocus',function(){if(isFocused){return;}cleanup&&cleanup();cleanup=callback();isFocused=true;});var blurSubscription=navigation.addListener('willBlur',function(){cleanup&&cleanup();cleanup=undefined;isFocused=false;});return function(){cleanup&&cleanup();focusSubscription.remove();blurSubscription.remove();};},[callback,navigation]);};export var useIsFocused=function useIsFocused(){var navigation=useNavigation();var getNavigation=useGetter(navigation);var _useState3=useState(navigation.isFocused),_useState4=_slicedToArray(_useState3,2),focused=_useState4[0],setFocused=_useState4[1];useEffect(function(){var nav=getNavigation();var focusSubscription=nav.addListener('willFocus',function(){return setFocused(true);});var blurSubscription=nav.addListener('willBlur',function(){return setFocused(false);});return function(){focusSubscription.remove();blurSubscription.remove();};},[getNavigation]);return focused;};
//# sourceMappingURL=Hooks.js.map